{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import 'font-awesome/css/font-awesome.min.css';\n\n// import axios from 'axios';\n// import './Blogs.css';\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n//   const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n//   useEffect(() => {\n//     axios.get(`${apiBaseUrl}/posts`, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//         Accept: 'application/json', // Specify JSON as the expected response\n//       },\n//     })\n//     .then(response => {\n//       console.log('API Response Data:', response.data); // Log the entire response for debugging\n//       setPosts(response.data);\n//     })\n//     .catch(error => {\n//       console.error('Error fetching posts:', error);\n//     });\n//   }, [authToken, apiBaseUrl]);\n\n//   const handleLikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the liked post\n//     })\n//     .catch(error => {\n//       console.error('Error liking post:', error);\n//     });\n//   };\n\n//   // Function to handle disliking a post\n//   const handleDislikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the disliked post\n//     })\n//     .catch(error => {\n//       console.error('Error disliking post:', error);\n//     });\n//   };\n\n//   return (\n\n//   <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div key={index} className=\"post\">\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">{post.content}</div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n//                 alt={post.title} // Set an appropriate alt text\n//                 className=\"post-image\"\n//                 onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n//                 onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n//               />\n//             )}\n//             <button onClick={() => handleLikePost(post.id)}>\n//               {/* <i className=\"fa fa-thumbs-up\"></i>  */}\n//               <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i> \n//               {/* Thumbs up icon */}\n//             </button>\n//             <button onClick={() => handleDislikePost(post.id)}>\n//               {/* <i className=\"fa fa-thumbs-down\"></i>  */}\n//               <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i> \n//               {/* Thumbs down icon */}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n\n// };\n\n// export default Blog;\n\n// import React, { useState, useEffect } from 'react';\n// import 'font-awesome/css/font-awesome.min.css';\n\n// import axios from 'axios';\n// import './Blogs.css';\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n//   const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n//   useEffect(() => {\n//     axios.get(`${apiBaseUrl}/posts`, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//         Accept: 'application/json', // Specify JSON as the expected response\n//       },\n//     })\n//     .then(response => {\n//       console.log('API Response Data:', response.data); // Log the entire response for debugging\n//       setPosts(response.data);\n//     })\n//     .catch(error => {\n//       console.error('Error fetching posts:', error);\n//     });\n//   }, [authToken, apiBaseUrl]);\n\n//   const handleLikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the liked post\n//       console.log('Post liked successfully');\n//     })\n//     .catch(error => {\n//       console.error('Error liking post:', error);\n//     });\n//   };\n\n//   const handleDislikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the disliked post\n//       console.log('Post disliked successfully');\n//     })\n//     .catch(error => {\n//       console.error('Error disliking post:', error);\n//     });\n//   };\n\n//   return (\n//     <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div key={index} className=\"post\">\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">{post.content}</div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n//                 alt={post.title} // Set an appropriate alt text\n//                 className=\"post-image\"\n//                 onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n//                 onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n//               />\n//             )}\n//             <button onClick={() => handleLikePost(post.id)}>\n//               <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i> {/* Thumbs up icon */}\n//             </button>\n//             <button onClick={() => handleDislikePost(post.id)}>\n//               <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i> {/* Thumbs down icon */}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Blog;\nimport React, { useState, useEffect } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from 'axios';\nimport './Blogs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n  // State to store like and dislike counts for each post\n  const [likeCounts, setLikeCounts] = useState({});\n  const [dislikeCounts, setDislikeCounts] = useState({});\n  useEffect(() => {\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: 'application/json'\n      }\n    }).then(response => {\n      setPosts(response.data);\n\n      // Fetch like and dislike counts for each post\n      response.data.forEach(post => {\n        axios.get(`${apiBaseUrl}/posts/${post.id}/like_dislike_counts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            Accept: 'application/json'\n          }\n        }).then(countsResponse => {\n          const {\n            likes_count,\n            dislikes_count\n          } = countsResponse.data;\n\n          // Update like and dislike counts in state for the specific post\n          setLikeCounts(prevCounts => ({\n            ...prevCounts,\n            [post.id]: likes_count\n          }));\n          setDislikeCounts(prevCounts => ({\n            ...prevCounts,\n            [post.id]: dislikes_count\n          }));\n        }).catch(error => {\n          console.error('Error fetching like/dislike counts:', error);\n        });\n      });\n    }).catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, [authToken, apiBaseUrl]);\n\n  // ...\n\n  const handleLikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the liked post\n      console.log('Post liked successfully');\n      // Increment the like count for the post\n      setLikeCounts(prevCounts => ({\n        ...prevCounts,\n        [postId]: prevCounts[postId] + 1\n      }));\n    }).catch(error => {\n      console.error('Error liking post:', error);\n    });\n  };\n  const handleDislikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the disliked post\n      console.log('Post disliked successfully');\n      // Increment the dislike count for the post\n      setDislikeCounts(prevCounts => ({\n        ...prevCounts,\n        [postId]: prevCounts[postId] + 1\n      }));\n    }).catch(error => {\n      console.error('Error disliking post:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-author\",\n          children: [\"By \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), post.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${apiBaseUrl}${post.image_url}` // Use the absolute image URL\n          ,\n          alt: post.title // Set an appropriate alt text\n          ,\n          className: \"post-image\",\n          onLoad: () => console.log('Image loaded successfully') // Log when the image is loaded\n          ,\n          onError: () => console.error('Image loading error') // Log if there's an error loading the image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLikePost(post.id),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-thumbs-up thumbs-up-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: likeCounts[post.id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDislikePost(post.id),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-thumbs-down thumbs-down-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: dislikeCounts[post.id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"0D/V62dy8RLy3kuIPhAnV4OnGuY=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","authToken","localStorage","getItem","apiBaseUrl","likeCounts","setLikeCounts","dislikeCounts","setDislikeCounts","get","headers","Authorization","Accept","then","response","data","forEach","post","id","countsResponse","likes_count","dislikes_count","prevCounts","catch","error","console","handleLikePost","postId","log","handleDislikePost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","author","content","image_url","src","alt","onLoad","onError","onClick","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import 'font-awesome/css/font-awesome.min.css';\n\n// import axios from 'axios';\n// import './Blogs.css';\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n//   const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n//   useEffect(() => {\n//     axios.get(`${apiBaseUrl}/posts`, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//         Accept: 'application/json', // Specify JSON as the expected response\n//       },\n//     })\n//     .then(response => {\n//       console.log('API Response Data:', response.data); // Log the entire response for debugging\n//       setPosts(response.data);\n//     })\n//     .catch(error => {\n//       console.error('Error fetching posts:', error);\n//     });\n//   }, [authToken, apiBaseUrl]);\n\n\n//   const handleLikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the liked post\n//     })\n//     .catch(error => {\n//       console.error('Error liking post:', error);\n//     });\n//   };\n\n//   // Function to handle disliking a post\n//   const handleDislikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the disliked post\n//     })\n//     .catch(error => {\n//       console.error('Error disliking post:', error);\n//     });\n//   };\n\n//   return (\n\n//   <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div key={index} className=\"post\">\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">{post.content}</div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n//                 alt={post.title} // Set an appropriate alt text\n//                 className=\"post-image\"\n//                 onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n//                 onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n//               />\n//             )}\n//             <button onClick={() => handleLikePost(post.id)}>\n//               {/* <i className=\"fa fa-thumbs-up\"></i>  */}\n//               <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i> \n//               {/* Thumbs up icon */}\n//             </button>\n//             <button onClick={() => handleDislikePost(post.id)}>\n//               {/* <i className=\"fa fa-thumbs-down\"></i>  */}\n//               <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i> \n//               {/* Thumbs down icon */}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n  \n// };\n\n// export default Blog;\n\n// import React, { useState, useEffect } from 'react';\n// import 'font-awesome/css/font-awesome.min.css';\n\n// import axios from 'axios';\n// import './Blogs.css';\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n//   const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n//   useEffect(() => {\n//     axios.get(`${apiBaseUrl}/posts`, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//         Accept: 'application/json', // Specify JSON as the expected response\n//       },\n//     })\n//     .then(response => {\n//       console.log('API Response Data:', response.data); // Log the entire response for debugging\n//       setPosts(response.data);\n//     })\n//     .catch(error => {\n//       console.error('Error fetching posts:', error);\n//     });\n//   }, [authToken, apiBaseUrl]);\n\n//   const handleLikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the liked post\n//       console.log('Post liked successfully');\n//     })\n//     .catch(error => {\n//       console.error('Error liking post:', error);\n//     });\n//   };\n\n//   const handleDislikePost = (postId) => {\n//     axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//       headers: {\n//         Authorization: `Bearer ${authToken}`,\n//       },\n//     })\n//     .then(response => {\n//       // Handle success, e.g., update the UI to reflect the disliked post\n//       console.log('Post disliked successfully');\n//     })\n//     .catch(error => {\n//       console.error('Error disliking post:', error);\n//     });\n//   };\n\n//   return (\n//     <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div key={index} className=\"post\">\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">{post.content}</div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n//                 alt={post.title} // Set an appropriate alt text\n//                 className=\"post-image\"\n//                 onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n//                 onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n//               />\n//             )}\n//             <button onClick={() => handleLikePost(post.id)}>\n//               <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i> {/* Thumbs up icon */}\n//             </button>\n//             <button onClick={() => handleDislikePost(post.id)}>\n//               <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i> {/* Thumbs down icon */}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Blog;\nimport React, { useState, useEffect } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport axios from 'axios';\nimport './Blogs.css';\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n  // State to store like and dislike counts for each post\n  const [likeCounts, setLikeCounts] = useState({});\n  const [dislikeCounts, setDislikeCounts] = useState({});\n\n\n  useEffect(() => {\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: 'application/json',\n      },\n    })\n    .then(response => {\n      setPosts(response.data);\n      \n      // Fetch like and dislike counts for each post\n      response.data.forEach(post => {\n        axios.get(`${apiBaseUrl}/posts/${post.id}/like_dislike_counts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            Accept: 'application/json',\n          },\n        })\n        .then(countsResponse => {\n          const { likes_count, dislikes_count } = countsResponse.data;\n          \n          // Update like and dislike counts in state for the specific post\n          setLikeCounts(prevCounts => ({\n            ...prevCounts,\n            [post.id]: likes_count,\n          }));\n          setDislikeCounts(prevCounts => ({\n            ...prevCounts,\n            [post.id]: dislikes_count,\n          }));\n        })\n        .catch(error => {\n          console.error('Error fetching like/dislike counts:', error);\n        });\n      });\n    })\n    .catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, [authToken, apiBaseUrl]);\n  \n\n// ...\n\n\n  const handleLikePost = (postId) => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n    .then(response => {\n      // Handle success, e.g., update the UI to reflect the liked post\n      console.log('Post liked successfully');\n      // Increment the like count for the post\n      setLikeCounts(prevCounts => ({\n        ...prevCounts,\n        [postId]: prevCounts[postId] + 1,\n      }));\n    })\n    .catch(error => {\n      console.error('Error liking post:', error);\n    });\n  };\n\n  const handleDislikePost = (postId) => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n    .then(response => {\n      // Handle success, e.g., update the UI to reflect the disliked post\n      console.log('Post disliked successfully');\n      // Increment the dislike count for the post\n      setDislikeCounts(prevCounts => ({\n        ...prevCounts,\n        [postId]: prevCounts[postId] + 1,\n      }));\n    })\n    .catch(error => {\n      console.error('Error disliking post:', error);\n    });\n  };\n\n  return (\n    <div className=\"blog\">\n      <h2>Latest Blog Posts</h2>\n      <div className=\"post-list\">\n        {posts.map((post, index) => (\n          <div key={index} className=\"post\">\n            <h3 className=\"post-title\">{post.title}</h3>\n            <p className=\"post-author\">By {post.author}</p>\n            <div className=\"post-content\">{post.content}</div>\n            {post.image_url && (\n              <img\n                src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n                alt={post.title} // Set an appropriate alt text\n                className=\"post-image\"\n                onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n                onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n              />\n            )}\n            <div>\n              <button onClick={() => handleLikePost(post.id)}>\n                <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i> {/* Thumbs up icon */}\n                <span>{likeCounts[post.id]}</span> {/* Display like count */}\n              </button>\n              <button onClick={() => handleDislikePost(post.id)}>\n                <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i> {/* Thumbs down icon */}\n                <span>{dislikeCounts[post.id]}</span> {/* Display dislike count */}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n"],"mappings":";;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uCAAuC;AAE9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACrD,MAAMC,UAAU,GAAG,uBAAuB,CAAC,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}