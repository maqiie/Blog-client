{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog-client/src/components/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"font-awesome/css/font-awesome.min.css\";\n// import axios from \"axios\";\n// import \"./Blogs.css\";\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [expandedPostId, setExpandedPostId] = useState(null); // Track the expanded post\n//   const authToken = localStorage.getItem(\"authToken\");\n//   const apiBaseUrl = \"http://localhost:3001\";\n\n//   useEffect(() => {\n//     // Fetch blog posts with their like and dislike counts\n//     axios\n//       .get(`${apiBaseUrl}/posts`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//           Accept: \"application/json\",\n//         },\n//       })\n//       .then((response) => {\n//         setPosts(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching posts:\", error);\n//       });\n//   }, [authToken, apiBaseUrl]);\n\n//   const handleLikePost = async (postId) => {\n//     try {\n//       // Send a POST request to like the post\n//       await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       });\n\n//       console.log(\"Post liked successfully\");\n\n//       // Fetch the updated like count\n//       const likeResponse = await axios.get(\n//         `${apiBaseUrl}/posts/${postId}/likes`\n//       ); // Use the new \"likes\" route\n\n//       const updatedLikeCount = likeResponse.data.likesCount;\n\n//       console.log(\"Updated Like Count:\", updatedLikeCount);\n\n//       // Update the UI to reflect the new like count\n//       setPosts((prevPosts) =>\n//         prevPosts.map((post) =>\n//           post.id === postId\n//             ? {\n//                 ...post,\n//                 likes_count: updatedLikeCount,\n//               }\n//             : post\n//         )\n//       );\n//     } catch (error) {\n//       console.error(\"Error liking post:\", error);\n//     }\n//   };\n\n//   const handleDislikePost = async (postId) => {\n//     try {\n//       // Send a POST request to dislike the post\n//       await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       });\n\n//       console.log(\"Post disliked successfully\");\n\n//       // Fetch the updated dislike count\n//       const dislikeResponse = await axios.get(\n//         `${apiBaseUrl}/posts/${postId}/dislikes`\n//       ); // Use the new \"dislikes\" route\n\n//       const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n\n//       console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n//       // Update the UI to reflect the new dislike count\n//       setPosts((prevPosts) =>\n//         prevPosts.map((post) =>\n//           post.id === postId\n//             ? {\n//                 ...post,\n//                 dislikes_count: updatedDislikeCount,\n//               }\n//             : post\n//         )\n//       );\n//     } catch (error) {\n//       console.error(\"Error disliking post:\", error);\n//     }\n//   }; // Move this closing curly brace to here\n\n//   const handlePostClick = (postId) => {\n//     // Toggle the expanded state of the post\n//     if (postId === expandedPostId) {\n//       // Collapse the post if it's already expanded\n//       setExpandedPostId(null);\n//     } else {\n//       // Expand the clicked post\n//       setExpandedPostId(postId);\n//     }\n//   };\n\n//   return (\n//     <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div\n//             key={index}\n//             className={`post ${post.id === expandedPostId ? \"expanded\" : \"\"}`}\n//           >\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">\n//               {post.id === expandedPostId ? post.content : post.content.slice(0, 200) + '...'}\n//               {/* Display only a portion of content if not expanded */}\n//             </div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`}\n//                 alt={post.title}\n//                 className=\"post-image\"\n//                 onLoad={() => console.log(\"Image loaded successfully\")}\n//                 onError={() => console.error(\"Image loading error\")}\n//               />\n//             )}\n//             <div>\n//               <button onClick={() => handleLikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n//                 <span>{post.likes_count}</span>\n//               </button>\n//               <button onClick={() => handleDislikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n//                 <span>{post.dislikes_count}</span>\n//               </button>\n//             </div>\n//             {/* Add a \"Read More\" link to expand/collapse the post */}\n//             <div className=\"read-more\" onClick={() => handlePostClick(post.id)}>\n//               {post.id === expandedPostId ? \"Read Less\" : \"Read More\"}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Blog;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport \"./Blogs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const authToken = localStorage.getItem(\"authToken\");\n  const apiBaseUrl = \"http://localhost:3001\";\n\n  // State to store comments for each post\n  const [comments, setComments] = useState({});\n\n  // State for the new comment input\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    // Fetch blog posts with their like and dislike counts\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      setPosts(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = async postId => {\n    try {\n      // Send a POST request to like the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Post liked successfully\");\n\n      // Fetch the updated like count\n      const likeResponse = await axios.get(`${apiBaseUrl}/posts/${postId}/likes`);\n      const updatedLikeCount = likeResponse.data.likesCount;\n      console.log(\"Updated Like Count:\", updatedLikeCount);\n\n      // Update the UI to reflect the new like count\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        likes_count: updatedLikeCount\n      } : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislikePost = async postId => {\n    try {\n      // Send a POST request to dislike the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Post disliked successfully\");\n\n      // Fetch the updated dislike count\n      const dislikeResponse = await axios.get(`${apiBaseUrl}/posts/${postId}/dislikes`);\n      const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n      console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n      // Update the UI to reflect the new dislike count\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        dislikes_count: updatedDislikeCount\n      } : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handlePostClick = postId => {\n    // Toggle the expanded state of the post\n    if (postId === expandedPostId) {\n      // Collapse the post if it's already expanded\n      setExpandedPostId(null);\n    } else {\n      // Expand the clicked post\n      setExpandedPostId(postId);\n\n      // Fetch comments for the expanded post\n      fetchComments(postId);\n    }\n  };\n  const fetchComments = async postId => {\n    try {\n      const response = await axios.get(`${apiBaseUrl}/posts/${postId}/comments`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\"\n        }\n      });\n\n      // Set the comments for the specific post\n      setComments({\n        ...comments,\n        [postId]: response.data\n      });\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const handleCommentSubmit = async postId => {\n    try {\n      // Send a POST request to add a new comment\n      const response = await axios.post(`${apiBaseUrl}/posts/${postId}/comments`, {\n        comment: {\n          content: newComment\n        }\n      }, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Clear the input field after successful submission\n      setNewComment(\"\");\n\n      // After adding a new comment, update the comments state with the new comment\n      const newCommentData = response.data; // Assuming the response contains the new comment data\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData]\n      }));\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    try {\n      // Send a DELETE request to remove the comment\n      await axios.delete(`${apiBaseUrl}/posts/${postId}/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Comment deleted successfully\");\n\n      // Update the UI to remove the deleted comment\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter(comment => comment.id !== commentId)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2\",\n      children: \"Latest Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post ${post.id === expandedPostId ? \"expanded\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-author\",\n          children: [\"By \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.id === expandedPostId ? post.content : post.content.slice(0, 200) + \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), post.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${apiBaseUrl}${post.image_url}`,\n          alt: post.title,\n          className: \"post-image\",\n          onLoad: () => console.log(\"Image loaded successfully\"),\n          onError: () => console.error(\"Image loading error\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLikePost(post.id),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-thumbs-up thumbs-up-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.likes_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDislikePost(post.id),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-thumbs-down thumbs-down-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.dislikes_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-more\",\n          onClick: () => handlePostClick(post.id),\n          children: post.id === expandedPostId ? \"Read Less\" : \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), post.id === expandedPostId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: comments[post.id] && comments[post.id].map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [comment.content, comment.userId === currentUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bin\",\n                  onClick: () => handleDeleteComment(post.id, comment.id),\n                  children: \"\\uD83D\\uDDD1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 27\n              }, this)]\n            }, commentIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment...\",\n              value: newComment,\n              onChange: e => setNewComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bookmarkBtn\",\n              onClick: () => handleCommentSubmit(post.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"IconContainer2\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  fill: \"white\",\n                  viewBox: \"0 0 512 512\",\n                  height: \"1em\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c-4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"/ZoLW6rCQF7n3w4QSo74fBfzc7o=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","expandedPostId","setExpandedPostId","authToken","localStorage","getItem","apiBaseUrl","comments","setComments","newComment","setNewComment","get","headers","Authorization","Accept","then","response","data","catch","error","console","handleLikePost","postId","post","log","likeResponse","updatedLikeCount","likesCount","prevPosts","map","id","likes_count","handleDislikePost","dislikeResponse","updatedDislikeCount","dislikesCount","dislikes_count","handlePostClick","fetchComments","handleCommentSubmit","comment","content","newCommentData","prevComments","handleDeleteComment","commentId","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","title","author","slice","image_url","src","alt","onLoad","onError","onClick","commentIndex","userId","currentUserId","type","placeholder","value","onChange","e","target","fill","viewBox","height","d","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog-client/src/components/Blogs/Blogs.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import \"font-awesome/css/font-awesome.min.css\";\n// import axios from \"axios\";\n// import \"./Blogs.css\";\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [expandedPostId, setExpandedPostId] = useState(null); // Track the expanded post\n//   const authToken = localStorage.getItem(\"authToken\");\n//   const apiBaseUrl = \"http://localhost:3001\";\n\n//   useEffect(() => {\n//     // Fetch blog posts with their like and dislike counts\n//     axios\n//       .get(`${apiBaseUrl}/posts`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//           Accept: \"application/json\",\n//         },\n//       })\n//       .then((response) => {\n//         setPosts(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching posts:\", error);\n//       });\n//   }, [authToken, apiBaseUrl]);\n\n//   const handleLikePost = async (postId) => {\n//     try {\n//       // Send a POST request to like the post\n//       await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       });\n\n//       console.log(\"Post liked successfully\");\n\n//       // Fetch the updated like count\n//       const likeResponse = await axios.get(\n//         `${apiBaseUrl}/posts/${postId}/likes`\n//       ); // Use the new \"likes\" route\n\n//       const updatedLikeCount = likeResponse.data.likesCount;\n\n//       console.log(\"Updated Like Count:\", updatedLikeCount);\n\n//       // Update the UI to reflect the new like count\n//       setPosts((prevPosts) =>\n//         prevPosts.map((post) =>\n//           post.id === postId\n//             ? {\n//                 ...post,\n//                 likes_count: updatedLikeCount,\n//               }\n//             : post\n//         )\n//       );\n//     } catch (error) {\n//       console.error(\"Error liking post:\", error);\n//     }\n//   };\n\n//   const handleDislikePost = async (postId) => {\n//     try {\n//       // Send a POST request to dislike the post\n//       await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       });\n\n//       console.log(\"Post disliked successfully\");\n\n//       // Fetch the updated dislike count\n//       const dislikeResponse = await axios.get(\n//         `${apiBaseUrl}/posts/${postId}/dislikes`\n//       ); // Use the new \"dislikes\" route\n\n//       const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n\n//       console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n//       // Update the UI to reflect the new dislike count\n//       setPosts((prevPosts) =>\n//         prevPosts.map((post) =>\n//           post.id === postId\n//             ? {\n//                 ...post,\n//                 dislikes_count: updatedDislikeCount,\n//               }\n//             : post\n//         )\n//       );\n//     } catch (error) {\n//       console.error(\"Error disliking post:\", error);\n//     }\n//   }; // Move this closing curly brace to here\n\n//   const handlePostClick = (postId) => {\n//     // Toggle the expanded state of the post\n//     if (postId === expandedPostId) {\n//       // Collapse the post if it's already expanded\n//       setExpandedPostId(null);\n//     } else {\n//       // Expand the clicked post\n//       setExpandedPostId(postId);\n//     }\n//   };\n\n//   return (\n//     <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div\n//             key={index}\n//             className={`post ${post.id === expandedPostId ? \"expanded\" : \"\"}`}\n//           >\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">\n//               {post.id === expandedPostId ? post.content : post.content.slice(0, 200) + '...'}\n//               {/* Display only a portion of content if not expanded */}\n//             </div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`}\n//                 alt={post.title}\n//                 className=\"post-image\"\n//                 onLoad={() => console.log(\"Image loaded successfully\")}\n//                 onError={() => console.error(\"Image loading error\")}\n//               />\n//             )}\n//             <div>\n//               <button onClick={() => handleLikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n//                 <span>{post.likes_count}</span>\n//               </button>\n//               <button onClick={() => handleDislikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n//                 <span>{post.dislikes_count}</span>\n//               </button>\n//             </div>\n//             {/* Add a \"Read More\" link to expand/collapse the post */}\n//             <div className=\"read-more\" onClick={() => handlePostClick(post.id)}>\n//               {post.id === expandedPostId ? \"Read Less\" : \"Read More\"}\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Blog;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport \"./Blogs.css\";\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const authToken = localStorage.getItem(\"authToken\");\n  const apiBaseUrl = \"http://localhost:3001\";\n\n  // State to store comments for each post\n  const [comments, setComments] = useState({});\n\n  // State for the new comment input\n  const [newComment, setNewComment] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch blog posts with their like and dislike counts\n    axios\n      .get(`${apiBaseUrl}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\",\n        },\n      })\n      .then((response) => {\n        setPosts(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching posts:\", error);\n      });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = async (postId) => {\n    try {\n      // Send a POST request to like the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n\n      console.log(\"Post liked successfully\");\n\n      // Fetch the updated like count\n      const likeResponse = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/likes`\n      );\n\n      const updatedLikeCount = likeResponse.data.likesCount;\n\n      console.log(\"Updated Like Count:\", updatedLikeCount);\n\n      // Update the UI to reflect the new like count\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId\n            ? {\n                ...post,\n                likes_count: updatedLikeCount,\n              }\n            : post\n        )\n      );\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n\n  const handleDislikePost = async (postId) => {\n    try {\n      // Send a POST request to dislike the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n\n      console.log(\"Post disliked successfully\");\n\n      // Fetch the updated dislike count\n      const dislikeResponse = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/dislikes`\n      );\n\n      const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n\n      console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n      // Update the UI to reflect the new dislike count\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId\n            ? {\n                ...post,\n                dislikes_count: updatedDislikeCount,\n              }\n            : post\n        )\n      );\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n\n  const handlePostClick = (postId) => {\n    // Toggle the expanded state of the post\n    if (postId === expandedPostId) {\n      // Collapse the post if it's already expanded\n      setExpandedPostId(null);\n    } else {\n      // Expand the clicked post\n      setExpandedPostId(postId);\n\n      // Fetch comments for the expanded post\n      fetchComments(postId);\n    }\n  };\n\n  const fetchComments = async (postId) => {\n    try {\n      const response = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/comments`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            Accept: \"application/json\",\n          },\n        }\n      );\n\n      // Set the comments for the specific post\n      setComments({ ...comments, [postId]: response.data });\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n\n  const handleCommentSubmit = async (postId) => {\n    try {\n      // Send a POST request to add a new comment\n      const response = await axios.post(\n        `${apiBaseUrl}/posts/${postId}/comments`,\n        { comment: { content: newComment } },\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Clear the input field after successful submission\n      setNewComment(\"\");\n\n      // After adding a new comment, update the comments state with the new comment\n      const newCommentData = response.data; // Assuming the response contains the new comment data\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData],\n      }));\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    try {\n      // Send a DELETE request to remove the comment\n      await axios.delete(\n        `${apiBaseUrl}/posts/${postId}/comments/${commentId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n\n      console.log(\"Comment deleted successfully\");\n\n      // Update the UI to remove the deleted comment\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter(\n          (comment) => comment.id !== commentId\n        ),\n      }));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n\n  return (\n    <div className=\"blog\">\n      <h2 className=\"h2\">Latest Blog Posts</h2>\n      <div className=\"post-list\">\n        {posts.map((post, index) => (\n          <div\n            key={index}\n            className={`post ${post.id === expandedPostId ? \"expanded\" : \"\"}`}\n          >\n            <h3 className=\"post-title\">{post.title}</h3>\n            <p className=\"post-author\">By {post.author}</p>\n            <div className=\"post-content\">\n              {post.id === expandedPostId\n                ? post.content\n                : post.content.slice(0, 200) + \"...\"}\n            </div>\n            {post.image_url && (\n              <img\n                src={`${apiBaseUrl}${post.image_url}`}\n                alt={post.title}\n                className=\"post-image\"\n                onLoad={() => console.log(\"Image loaded successfully\")}\n                onError={() => console.error(\"Image loading error\")}\n              />\n            )}\n            <div>\n              <button onClick={() => handleLikePost(post.id)}>\n                <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n                <span>{post.likes_count}</span>\n              </button>\n              <button onClick={() => handleDislikePost(post.id)}>\n                <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n                <span>{post.dislikes_count}</span>\n              </button>\n            </div>\n            <div className=\"read-more\" onClick={() => handlePostClick(post.id)}>\n              {post.id === expandedPostId ? \"Read Less\" : \"Read More\"}\n            </div>\n            {post.id === expandedPostId && (\n              <div className=\"comments-section\">\n                <h4>Comments:</h4>\n                {/* <ul>\n                  {comments[post.id] &&\n                    comments[post.id].map((comment, commentIndex) => (\n                      <li key={commentIndex}>{comment.content}</li>\n                      \n                    ))}\n                </ul> */}\n                <ul>\n                  {comments[post.id] &&\n                    comments[post.id].map((comment, commentIndex) => (\n                      <li key={commentIndex}>\n                        {comment.content}\n                        {comment.userId === currentUserId && (\n                          <div className=\"comment-actions\">\n                            <button\n                              className=\"bin\"\n                              onClick={() =>\n                                handleDeleteComment(post.id, comment.id)\n                              }\n                            >\n                              🗑\n                            </button>\n                          </div>\n                        )}\n                      </li>\n                    ))}\n                </ul>\n\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Add a comment...\"\n                    value={newComment}\n                    onChange={(e) => setNewComment(e.target.value)}\n                  />\n                  <button\n                    className=\"bookmarkBtn\"\n                    onClick={() => handleCommentSubmit(post.id)}\n                  >\n                    <span className=\"IconContainer2\">\n                      <svg fill=\"white\" viewBox=\"0 0 512 512\" height=\"1em\">\n                        <path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c-4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"></path>\n                      </svg>\n                    </span>\n                    <p className=\"text\">Comment</p>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,MAAMC,UAAU,GAAG,uBAAuB;;EAE1C;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5C;EACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}