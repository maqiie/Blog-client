{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"font-awesome/css/font-awesome.min.css\";\n\n// import axios from \"axios\";\n// import \"./Blogs.css\";\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const authToken = localStorage.getItem(\"authToken\"); // Assuming you store the authentication token in local storage\n//   const apiBaseUrl = \"http://localhost:3001\"; // Replace with your actual API base URL\n\n//   // Initialize like and dislike counts as objects with default values of 0\n//   const [likeCounts, setLikeCounts] = useState({});\n//   const [dislikeCounts, setDislikeCounts] = useState({});\n\n//   useEffect(() => {\n//     axios\n//       .get(`${apiBaseUrl}/posts`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//           Accept: \"application/json\",\n//         },\n//       })\n//       .then(async (response) => {\n//         setPosts(response.data);\n\n//         // Fetch like and dislike counts for each post\n//         const postPromises = response.data.map(async (post) => {\n//           try {\n//             const countsResponse = await axios.get(\n//               `${apiBaseUrl}/posts/${post.id}/like_dislike_counts`,\n//               {\n//                 headers: {\n//                   Authorization: `Bearer ${authToken}`,\n//                   Accept: \"application/json\",\n//                 },\n//               }\n//             );\n\n//             const { likes_count, dislikes_count } = countsResponse.data;\n//             const initialLikeCounts = {};\n//             const initialDislikeCounts = {};\n\n//             response.data.forEach((post) => {\n//               initialLikeCounts[post.id] = 0;\n//               initialDislikeCounts[post.id] = 0;\n\n//               // ...\n//             });\n//             // Update like and dislike counts in state for the specific post\n//             setLikeCounts((prevCounts) => ({\n//               ...prevCounts,\n//               [post.id]: likes_count,\n//             }));\n//             setDislikeCounts((prevCounts) => ({\n//               ...prevCounts,\n//               [post.id]: dislikes_count,\n//             }));\n\n//             // Attach like and dislike counts to the post object\n//             return { ...post, likes_count, dislikes_count };\n//           } catch (error) {\n//             console.error(\"Error fetching like/dislike counts:\", error);\n//             return post; // Return the original post if there was an error\n//           }\n//         });\n\n//         // Wait for all promises to resolve\n//         const postsWithCounts = await Promise.all(postPromises);\n\n//         // Update the state with posts including like and dislike counts\n//         setPosts(postsWithCounts);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching posts:\", error);\n//       });\n//   }, [authToken, apiBaseUrl]);\n//   const handleLikePost = (postId) => {\n//     axios\n//       .post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Handle success, e.g., update the UI to reflect the liked post\n//         console.log(\"Post liked successfully\");\n//         // Increment the like count for the post\n//         setLikeCounts((prevCounts) => ({\n//           ...prevCounts,\n//           [postId]: prevCounts[postId] + 1,\n//         }));\n//       })\n//       .catch((error) => {\n//         console.error(\"Error liking post:\", error);\n//       });\n//   };\n\n//   const handleDislikePost = (postId) => {\n//     axios\n//       .post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Handle success, e.g., update the UI to reflect the disliked post\n//         console.log(\"Post disliked successfully\");\n//         // Increment the dislike count for the post\n//         setDislikeCounts((prevCounts) => ({\n//           ...prevCounts,\n//           [postId]: prevCounts[postId] + 1,\n//         }));\n//       })\n//       .catch((error) => {\n//         console.error(\"Error disliking post:\", error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div key={index} className=\"post\">\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">{post.content}</div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n//                 alt={post.title} // Set an appropriate alt text\n//                 className=\"post-image\"\n//                 onLoad={() => console.log(\"Image loaded successfully\")} // Log when the image is loaded\n//                 onError={() => console.error(\"Image loading error\")} // Log if there's an error loading the image\n//               />\n//             )}\n//             <div>\n//               <button onClick={() => handleLikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n//                 {/* Thumbs up icon */}\n//                 <span>{likeCounts[post.id]}</span> {/* Display like count */}\n//               </button>\n//               <button onClick={() => handleDislikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n//                 {/* Thumbs down icon */}\n//                 <span>{dislikeCounts[post.id]}</span>{\" \"}\n//                 {/* Display dislike count */}\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Blog;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post,\n  authToken,\n  apiBaseUrl\n}) => {\n  _s();\n  const [userAction, setUserAction] = useState(null);\n  useEffect(() => {\n    // Fetch user's action (like/dislike) for the post\n    axios.get(`${apiBaseUrl}/posts/${post.id}/user_action`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      const {\n        user_action\n      } = response.data;\n      setUserAction(user_action);\n    }).catch(error => {\n      console.error(\"Error fetching user action:\", error);\n    });\n  }, [authToken, apiBaseUrl, post.id]);\n  const handleLike = () => {\n    if (userAction === \"like\") {\n      // User already liked, remove the like\n      axios.delete(`${apiBaseUrl}/posts/${post.id}/like`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(() => {\n        setUserAction(null);\n      }).catch(error => {\n        console.error(\"Error removing like:\", error);\n      });\n    } else {\n      // User dislikes, change to like\n      axios.post(`${apiBaseUrl}/posts/${post.id}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(() => {\n        setUserAction(\"like\");\n      }).catch(error => {\n        console.error(\"Error liking post:\", error);\n      });\n    }\n  };\n  const handleDislike = () => {\n    if (userAction === \"dislike\") {\n      // User already disliked, remove the dislike\n      axios.delete(`${apiBaseUrl}/posts/${post.id}/dislike`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(() => {\n        setUserAction(null);\n      }).catch(error => {\n        console.error(\"Error removing dislike:\", error);\n      });\n    } else {\n      // User likes, change to dislike\n      axios.post(`${apiBaseUrl}/posts/${post.id}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(() => {\n        setUserAction(\"dislike\");\n      }).catch(error => {\n        console.error(\"Error disliking post:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"post-title\",\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-author\",\n      children: [\"By \", post.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), post.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${apiBaseUrl}${post.image_url}` // Use the absolute image URL\n      ,\n      alt: post.title // Set an appropriate alt text\n      ,\n      className: \"post-image\",\n      onLoad: () => console.log(\"Image loaded successfully\") // Log when the image is loaded\n      ,\n      onError: () => console.error(\"Image loading error\") // Log if there's an error loading the image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa fa-thumbs-up ${userAction === \"like\" ? \"active\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.like_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDislike,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa fa-thumbs-down ${userAction === \"dislike\" ? \"active\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.dislike_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"eo0OaGbjNo1+kYmzBKTxhy6lt+E=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Post","post","authToken","apiBaseUrl","_s","userAction","setUserAction","get","id","headers","Authorization","Accept","then","response","user_action","data","catch","error","console","handleLike","delete","handleDislike","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","author","content","image_url","src","alt","onLoad","log","onError","onClick","like_count","dislike_count","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js"],"sourcesContent":["\n// import React, { useState, useEffect } from \"react\";\n// import \"font-awesome/css/font-awesome.min.css\";\n\n// import axios from \"axios\";\n// import \"./Blogs.css\";\n\n// const Blog = () => {\n//   const [posts, setPosts] = useState([]);\n//   const authToken = localStorage.getItem(\"authToken\"); // Assuming you store the authentication token in local storage\n//   const apiBaseUrl = \"http://localhost:3001\"; // Replace with your actual API base URL\n\n//   // Initialize like and dislike counts as objects with default values of 0\n//   const [likeCounts, setLikeCounts] = useState({});\n//   const [dislikeCounts, setDislikeCounts] = useState({});\n\n//   useEffect(() => {\n//     axios\n//       .get(`${apiBaseUrl}/posts`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//           Accept: \"application/json\",\n//         },\n//       })\n//       .then(async (response) => {\n//         setPosts(response.data);\n\n//         // Fetch like and dislike counts for each post\n//         const postPromises = response.data.map(async (post) => {\n//           try {\n//             const countsResponse = await axios.get(\n//               `${apiBaseUrl}/posts/${post.id}/like_dislike_counts`,\n//               {\n//                 headers: {\n//                   Authorization: `Bearer ${authToken}`,\n//                   Accept: \"application/json\",\n//                 },\n//               }\n//             );\n\n//             const { likes_count, dislikes_count } = countsResponse.data;\n//             const initialLikeCounts = {};\n//             const initialDislikeCounts = {};\n\n//             response.data.forEach((post) => {\n//               initialLikeCounts[post.id] = 0;\n//               initialDislikeCounts[post.id] = 0;\n\n//               // ...\n//             });\n//             // Update like and dislike counts in state for the specific post\n//             setLikeCounts((prevCounts) => ({\n//               ...prevCounts,\n//               [post.id]: likes_count,\n//             }));\n//             setDislikeCounts((prevCounts) => ({\n//               ...prevCounts,\n//               [post.id]: dislikes_count,\n//             }));\n\n//             // Attach like and dislike counts to the post object\n//             return { ...post, likes_count, dislikes_count };\n//           } catch (error) {\n//             console.error(\"Error fetching like/dislike counts:\", error);\n//             return post; // Return the original post if there was an error\n//           }\n//         });\n\n//         // Wait for all promises to resolve\n//         const postsWithCounts = await Promise.all(postPromises);\n\n//         // Update the state with posts including like and dislike counts\n//         setPosts(postsWithCounts);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching posts:\", error);\n//       });\n//   }, [authToken, apiBaseUrl]);\n//   const handleLikePost = (postId) => {\n//     axios\n//       .post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Handle success, e.g., update the UI to reflect the liked post\n//         console.log(\"Post liked successfully\");\n//         // Increment the like count for the post\n//         setLikeCounts((prevCounts) => ({\n//           ...prevCounts,\n//           [postId]: prevCounts[postId] + 1,\n//         }));\n//       })\n//       .catch((error) => {\n//         console.error(\"Error liking post:\", error);\n//       });\n//   };\n\n//   const handleDislikePost = (postId) => {\n//     axios\n//       .post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Handle success, e.g., update the UI to reflect the disliked post\n//         console.log(\"Post disliked successfully\");\n//         // Increment the dislike count for the post\n//         setDislikeCounts((prevCounts) => ({\n//           ...prevCounts,\n//           [postId]: prevCounts[postId] + 1,\n//         }));\n//       })\n//       .catch((error) => {\n//         console.error(\"Error disliking post:\", error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"blog\">\n//       <h2>Latest Blog Posts</h2>\n//       <div className=\"post-list\">\n//         {posts.map((post, index) => (\n//           <div key={index} className=\"post\">\n//             <h3 className=\"post-title\">{post.title}</h3>\n//             <p className=\"post-author\">By {post.author}</p>\n//             <div className=\"post-content\">{post.content}</div>\n//             {post.image_url && (\n//               <img\n//                 src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n//                 alt={post.title} // Set an appropriate alt text\n//                 className=\"post-image\"\n//                 onLoad={() => console.log(\"Image loaded successfully\")} // Log when the image is loaded\n//                 onError={() => console.error(\"Image loading error\")} // Log if there's an error loading the image\n//               />\n//             )}\n//             <div>\n//               <button onClick={() => handleLikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n//                 {/* Thumbs up icon */}\n//                 <span>{likeCounts[post.id]}</span> {/* Display like count */}\n//               </button>\n//               <button onClick={() => handleDislikePost(post.id)}>\n//                 <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n//                 {/* Thumbs down icon */}\n//                 <span>{dislikeCounts[post.id]}</span>{\" \"}\n//                 {/* Display dislike count */}\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Blog;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Post = ({ post, authToken, apiBaseUrl }) => {\n  const [userAction, setUserAction] = useState(null);\n\n  useEffect(() => {\n    // Fetch user's action (like/dislike) for the post\n    axios\n      .get(`${apiBaseUrl}/posts/${post.id}/user_action`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\",\n        },\n      })\n      .then((response) => {\n        const { user_action } = response.data;\n        setUserAction(user_action);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching user action:\", error);\n      });\n  }, [authToken, apiBaseUrl, post.id]);\n\n  const handleLike = () => {\n    if (userAction === \"like\") {\n      // User already liked, remove the like\n      axios\n        .delete(`${apiBaseUrl}/posts/${post.id}/like`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then(() => {\n          setUserAction(null);\n        })\n        .catch((error) => {\n          console.error(\"Error removing like:\", error);\n        });\n    } else {\n      // User dislikes, change to like\n      axios\n        .post(`${apiBaseUrl}/posts/${post.id}/like`, null, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then(() => {\n          setUserAction(\"like\");\n        })\n        .catch((error) => {\n          console.error(\"Error liking post:\", error);\n        });\n    }\n  };\n\n  const handleDislike = () => {\n    if (userAction === \"dislike\") {\n      // User already disliked, remove the dislike\n      axios\n        .delete(`${apiBaseUrl}/posts/${post.id}/dislike`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then(() => {\n          setUserAction(null);\n        })\n        .catch((error) => {\n          console.error(\"Error removing dislike:\", error);\n        });\n    } else {\n      // User likes, change to dislike\n      axios\n        .post(`${apiBaseUrl}/posts/${post.id}/dislike`, null, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then(() => {\n          setUserAction(\"dislike\");\n        })\n        .catch((error) => {\n          console.error(\"Error disliking post:\", error);\n        });\n    }\n  };\n\n  return (\n    <div className=\"post\">\n      <h3 className=\"post-title\">{post.title}</h3>\n      <p className=\"post-author\">By {post.author}</p>\n      <div className=\"post-content\">{post.content}</div>\n      {post.image_url && (\n        <img\n          src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n          alt={post.title} // Set an appropriate alt text\n          className=\"post-image\"\n          onLoad={() => console.log(\"Image loaded successfully\")} // Log when the image is loaded\n          onError={() => console.error(\"Image loading error\")} // Log if there's an error loading the image\n        />\n      )}\n      <div>\n        <button onClick={handleLike}>\n          <i className={`fa fa-thumbs-up ${userAction === \"like\" ? \"active\" : \"\"}`}></i>{\" \"}\n          <span>{post.like_count}</span>\n        </button>\n        <button onClick={handleDislike}>\n          <i className={`fa fa-thumbs-down ${userAction === \"dislike\" ? \"active\" : \"\"}`}></i>{\" \"}\n          <span>{post.dislike_count}</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}