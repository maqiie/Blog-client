{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport \"./Blogs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem(\"authToken\"); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = \"http://localhost:3001\"; // Replace with your actual API base URL\n\n  // Initialize like and dislike counts as objects with default values of 0\n  const [likeCounts, setLikeCounts] = useState({});\n  const [dislikeCounts, setDislikeCounts] = useState({});\n  useEffect(() => {\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: \"application/json\"\n      }\n    }).then(async response => {\n      setPosts(response.data);\n\n      // Fetch like and dislike counts for each post\n      const postPromises = response.data.map(async post => {\n        try {\n          const countsResponse = await axios.get(`${apiBaseUrl}/posts/${post.id}/like_dislike_counts`, {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n              Accept: \"application/json\"\n            }\n          });\n          const {\n            likes_count,\n            dislikes_count\n          } = countsResponse.data;\n          const initialLikeCounts = {};\n          const initialDislikeCounts = {};\n          response.data.forEach(post => {\n            initialLikeCounts[post.id] = 0;\n            initialDislikeCounts[post.id] = 0;\n\n            // ...\n          });\n          // Update like and dislike counts in state for the specific post\n          setLikeCounts(prevCounts => ({\n            ...prevCounts,\n            [post.id]: likes_count\n          }));\n          setDislikeCounts(prevCounts => ({\n            ...prevCounts,\n            [post.id]: dislikes_count\n          }));\n\n          // Attach like and dislike counts to the post object\n          return {\n            ...post,\n            likes_count,\n            dislikes_count\n          };\n        } catch (error) {\n          console.error(\"Error fetching like/dislike counts:\", error);\n          return post; // Return the original post if there was an error\n        }\n      });\n\n      // Wait for all promises to resolve\n      const postsWithCounts = await Promise.all(postPromises);\n\n      // Update the state with posts including like and dislike counts\n      setPosts(postsWithCounts);\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the liked post\n      console.log(\"Post liked successfully\");\n      // Increment the like count for the post\n      setLikeCounts(prevCounts => ({\n        ...prevCounts,\n        [postId]: prevCounts[postId] + 1\n      }));\n    }).catch(error => {\n      console.error(\"Error liking post:\", error);\n    });\n  };\n  const handleDislikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the disliked post\n      console.log(\"Post disliked successfully\");\n      // Increment the dislike count for the post\n      setDislikeCounts(prevCounts => ({\n        ...prevCounts,\n        [postId]: prevCounts[postId] + 1\n      }));\n    }).catch(error => {\n      console.error(\"Error disliking post:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"0D/V62dy8RLy3kuIPhAnV4OnGuY=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","authToken","localStorage","getItem","apiBaseUrl","likeCounts","setLikeCounts","dislikeCounts","setDislikeCounts","get","headers","Authorization","Accept","then","response","data","postPromises","map","post","countsResponse","id","likes_count","dislikes_count","initialLikeCounts","initialDislikeCounts","forEach","prevCounts","error","console","postsWithCounts","Promise","all","catch","handleLikePost","postId","log","handleDislikePost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nimport axios from \"axios\";\nimport \"./Blogs.css\";\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem(\"authToken\"); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = \"http://localhost:3001\"; // Replace with your actual API base URL\n\n  // Initialize like and dislike counts as objects with default values of 0\n  const [likeCounts, setLikeCounts] = useState({});\n  const [dislikeCounts, setDislikeCounts] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(`${apiBaseUrl}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\",\n        },\n      })\n      .then(async (response) => {\n        setPosts(response.data);\n\n        // Fetch like and dislike counts for each post\n        const postPromises = response.data.map(async (post) => {\n          try {\n            const countsResponse = await axios.get(\n              `${apiBaseUrl}/posts/${post.id}/like_dislike_counts`,\n              {\n                headers: {\n                  Authorization: `Bearer ${authToken}`,\n                  Accept: \"application/json\",\n                },\n              }\n            );\n\n            const { likes_count, dislikes_count } = countsResponse.data;\n            const initialLikeCounts = {};\n            const initialDislikeCounts = {};\n\n            response.data.forEach((post) => {\n              initialLikeCounts[post.id] = 0;\n              initialDislikeCounts[post.id] = 0;\n\n              // ...\n            });\n            // Update like and dislike counts in state for the specific post\n            setLikeCounts((prevCounts) => ({\n              ...prevCounts,\n              [post.id]: likes_count,\n            }));\n            setDislikeCounts((prevCounts) => ({\n              ...prevCounts,\n              [post.id]: dislikes_count,\n            }));\n\n            // Attach like and dislike counts to the post object\n            return { ...post, likes_count, dislikes_count };\n          } catch (error) {\n            console.error(\"Error fetching like/dislike counts:\", error);\n            return post; // Return the original post if there was an error\n          }\n        });\n\n        // Wait for all promises to resolve\n        const postsWithCounts = await Promise.all(postPromises);\n\n        // Update the state with posts including like and dislike counts\n        setPosts(postsWithCounts);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching posts:\", error);\n      });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = (postId) => {\n    axios\n      .post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n      .then((response) => {\n        // Handle success, e.g., update the UI to reflect the liked post\n        console.log(\"Post liked successfully\");\n        // Increment the like count for the post\n        setLikeCounts((prevCounts) => ({\n          ...prevCounts,\n          [postId]: prevCounts[postId] + 1,\n        }));\n      })\n      .catch((error) => {\n        console.error(\"Error liking post:\", error);\n      });\n  };\n\n  const handleDislikePost = (postId) => {\n    axios\n      .post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n      .then((response) => {\n        // Handle success, e.g., update the UI to reflect the disliked post\n        console.log(\"Post disliked successfully\");\n        // Increment the dislike count for the post\n        setDislikeCounts((prevCounts) => ({\n          ...prevCounts,\n          [postId]: prevCounts[postId] + 1,\n        }));\n      })\n      .catch((error) => {\n        console.error(\"Error disliking post:\", error);\n      });\n  };\n\n  return (\n    <div className=\"blog\">\n      <h2>Latest Blog Posts</h2>\n      <div className=\"post-list\">\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}