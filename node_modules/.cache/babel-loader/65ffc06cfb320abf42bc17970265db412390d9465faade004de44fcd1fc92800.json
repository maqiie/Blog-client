{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3001/auth/sign_in', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers['access-token'];\n\n//         // Store the Authorization header with the Bearer token in localStorage\n//         localStorage.setItem('authorization', `Bearer ${authToken}`);\n\n//         // Log the token to the console to check if it's working\n//         console.log('Authorization Header:', `Bearer ${authToken}`);\n\n//         navigate('/');\n//       } else {\n//         console.log('Login failed');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3001/auth/sign_in', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers['access-token'];\n\n//         // Store the Authorization header with the Bearer token in localStorage\n//         localStorage.setItem('authorization', `Bearer ${authToken}`);\n\n//         // Log the token to the console to check if it's working\n//         console.log('Authorization Header:', `Bearer ${authToken}`);\n\n//         // Redirect to the home page or another page of your choice\n//         navigate('/');\n\n//       } else {\n//         console.log('Login failed');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\n\n//   // Check if there's an existing token in localStorage\n//   // and if so, automatically navigate to the home page.\n//   const checkExistingToken = () => {\n//     const authToken = localStorage.getItem('authorization');\n//     if (authToken) {\n//       navigate('/');\n//     }\n//   };\n\n//   // Call checkExistingToken when the component mounts\n//   React.useEffect(() => {\n//     checkExistingToken();\n//   }, []);\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3001/auth/sign_in', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers['access-token'];\n\n//         // Store the Authorization header with the Bearer token in localStorage\n//         localStorage.setItem('authorization', `Bearer ${authToken}`);\n\n//         // Log the token to the console to check if it's working\n//         console.log('Authorization Header:', `Bearer ${authToken}`);\n\n//         // Redirect to the home page or another page of your choice\n//         navigate('/');\n\n//       } else {\n//         console.log('Login failed');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\n\n//   // Check if there's an existing token in localStorage\n//   // and if so, automatically navigate to the home page.\n//   const checkExistingToken = () => {\n//     const authToken = localStorage.getItem('authorization');\n//     if (authToken) {\n//       console.log('User is already logged in. Token found:', authToken);\n//       navigate('/');\n//     }\n//   };\n\n//   // Call checkExistingToken when the component mounts\n//   React.useEffect(() => {\n//     checkExistingToken();\n//   }, []);\n\n//   return (\n//     <div className=\"auth-form bg-white p-6 rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">Email</label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">Password</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\"\n//         >\n//           Login\n//         </button>\n//       </form>\n//       <p className=\"mt-4\">\n//         Don't have an account?{' '}\n//         <button onClick={onToggleForm} className=\"text-blue-500 hover:underline focus:outline-none\">\n//           Sign Up\n//         </button>\n//       </p>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/home/markpaul/projects/Blog/client/src/components/register/login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate\n\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3001/auth/sign_in', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers['access-token'];\n\n//         // Store the Authorization header with the Bearer token in localStorage\n//         localStorage.setItem('authorization', `Bearer ${authToken}`);\n\n//         // Log the token to the console to check if it's working\n//         console.log('Authorization Header:', `Bearer ${authToken}`);\n\n//         navigate('/');\n//       } else {\n//         console.log('Login failed');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3001/auth/sign_in', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers['access-token'];\n\n//         // Store the Authorization header with the Bearer token in localStorage\n//         localStorage.setItem('authorization', `Bearer ${authToken}`);\n\n//         // Log the token to the console to check if it's working\n//         console.log('Authorization Header:', `Bearer ${authToken}`);\n\n//         // Redirect to the home page or another page of your choice\n//         navigate('/');\n\n//       } else {\n//         console.log('Login failed');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\n\n//   // Check if there's an existing token in localStorage\n//   // and if so, automatically navigate to the home page.\n//   const checkExistingToken = () => {\n//     const authToken = localStorage.getItem('authorization');\n//     if (authToken) {\n//       navigate('/');\n//     }\n//   };\n\n//   // Call checkExistingToken when the component mounts\n//   React.useEffect(() => {\n//     checkExistingToken();\n//   }, []);\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:3001/auth/sign_in', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers['access-token'];\n\n//         // Store the Authorization header with the Bearer token in localStorage\n//         localStorage.setItem('authorization', `Bearer ${authToken}`);\n\n//         // Log the token to the console to check if it's working\n//         console.log('Authorization Header:', `Bearer ${authToken}`);\n\n//         // Redirect to the home page or another page of your choice\n//         navigate('/');\n\n//       } else {\n//         console.log('Login failed');\n//       }\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\n\n//   // Check if there's an existing token in localStorage\n//   // and if so, automatically navigate to the home page.\n//   const checkExistingToken = () => {\n//     const authToken = localStorage.getItem('authorization');\n//     if (authToken) {\n//       console.log('User is already logged in. Token found:', authToken);\n//       navigate('/');\n//     }\n//   };\n\n//   // Call checkExistingToken when the component mounts\n//   React.useEffect(() => {\n//     checkExistingToken();\n//   }, []);\n\n//   return (\n//     <div className=\"auth-form bg-white p-6 rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">Email</label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">Password</label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\"\n//         >\n//           Login\n//         </button>\n//       </form>\n//       <p className=\"mt-4\">\n//         Don't have an account?{' '}\n//         <button onClick={onToggleForm} className=\"text-blue-500 hover:underline focus:outline-none\">\n//           Sign Up\n//         </button>\n//       </p>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n\n\n"],"mappings":"AAAA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}