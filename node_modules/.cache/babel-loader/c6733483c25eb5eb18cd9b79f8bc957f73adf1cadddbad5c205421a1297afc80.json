{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n//   }, []);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem('authToken');\n//     console.log('Auth Token:', authToken); // Add this line to log the authToken\n\n//     const headers = {\n//       'Authorization': `Bearer ${authToken}`,\n//       'Content-Type': 'multipart/form-data', // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n// <form onSubmit={handleSubmit}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Title\"\n//     value={title}\n//     onChange={(e) => setTitle(e.target.value)}\n//     required\n//   />\n//   <textarea\n//     placeholder=\"Content\"\n//     value={content}\n//     onChange={(e) => setContent(e.target.value)}\n//     required\n//   />\n//   <select\n//     value={category}\n//     onChange={(e) => setCategory(e.target.value)}\n//     required\n//   >\n//     <option value=\"\" disabled>\n//       Select a category\n//     </option>\n//     {categories.map((category) => (\n//       <option key={category.id} value={category.id}>\n//         {category.name}\n//       </option>\n//     ))}\n//   </select>\n//   <Dropzone onDrop={handleImageDrop}>\n//     {({ getRootProps, getInputProps }) => (\n//       <div className=\"dropzone\" {...getRootProps()}>\n//         <input {...getInputProps()} />\n//         <p>Drag & drop images or click here to select files</p>\n//       </div>\n//     )}\n//   </Dropzone>\n//   <br />\n//   <button class=\"fancy\" href=\"#\">\n//     <span class=\"top-key\"></span>\n//     <span class=\"text\">Create Post</span>\n//     <span class=\"bottom-key-1\"></span>\n//     <span class=\"bottom-key-2\"></span>\n//   </button>\n// </form>\n//     </div>\n//   );\n// };\n\n// export default CreatePost;\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  currentUser\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios.get(\"http://localhost:3001/categories\").then(response => {\n      setCategories(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n    });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios.get(`http://localhost:3001/users/${userId}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(response => {\n        setUserPosts(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n      });\n    }\n  }, [currentUser]);\n  const handleImageDrop = acceptedFiles => {\n    setImages(acceptedFiles);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n\n    // Ensure the category ID is an integer\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n    images.forEach(image => formData.append(\"post[images][]\", image));\n\n    // Retrieve the user's authentication token from local storage\n    const authToken = localStorage.getItem(\"authToken\");\n    console.log(\"Auth Token:\", authToken);\n    const headers = {\n      Authorization: `Bearer ${authToken}`,\n      \"Content-Type\": \"multipart/form-data\" // Set the content type for file uploads\n    };\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts\", formData, {\n        headers\n      });\n      console.log(\"Post created:\", response.data);\n      // Reset form fields\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: handleImageDrop,\n        children: ({\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropzone\",\n          ...getRootProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag & drop images or click here to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"fancy\",\n        href: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"top-key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"text\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"bottom-key-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"bottom-key-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), userPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No blogs, start your blogging journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-cards-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n// <form onSubmit={handleSubmit}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Title\"\n//     value={title}\n//     onChange={(e) => setTitle(e.target.value)}\n//     required\n//   />\n//   <textarea\n//     placeholder=\"Content\"\n//     value={content}\n//     onChange={(e) => setContent(e.target.value)}\n//     required\n//   />\n//   <select\n//     value={category}\n//     onChange={(e) => setCategory(e.target.value)}\n//     required\n//   >\n//     <option value=\"\" disabled>\n//       Select a category\n//     </option>\n//     {categories.map((category) => (\n//       <option key={category.id} value={category.id}>\n//         {category.name}\n//       </option>\n//     ))}\n//   </select>\n//   <Dropzone onDrop={handleImageDrop}>\n//     {({ getRootProps, getInputProps }) => (\n//       <div className=\"dropzone\" {...getRootProps()}>\n//         <input {...getInputProps()} />\n//         <p>Drag & drop images or click here to select files</p>\n//       </div>\n//     )}\n//   </Dropzone>\n//   <br />\n//   <button className=\"fancy\" href=\"#\">\n//     <span className=\"top-key\"></span>\n//     <span className=\"text\">Create Post</span>\n//     <span className=\"bottom-key-1\"></span>\n//     <span className=\"bottom-key-2\"></span>\n//   </button>\n// </form>\n//     </div>\n//   );\n//   <div className=\"posts\">\n//     <h3>Your Posts</h3>\n//     {userPosts.length === 0 ? (\n//       <p>No blogs, start your blogging journey</p>\n//     ) : (\n//       <div className=\"blog-cards-container\">\n//         <ul>\n//           {userPosts.map((post) => (\n//             <li key={post.id}>\n//               <h4>{post.title}</h4>\n//               <p>{post.content}</p>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     )}\n//   </div>;\n// };\n_s(CreatePost, \"TSZLN7Eip4qPU6WSRg1cvAKjANE=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","Dropzone","axios","jsxDEV","_jsxDEV","CreatePost","currentUser","_s","title","setTitle","content","setContent","category","setCategory","categories","setCategories","images","setImages","userPosts","setUserPosts","get","then","response","data","catch","error","console","authToken","localStorage","getItem","userId","id","headers","Authorization","handleImageDrop","acceptedFiles","handleSubmit","event","preventDefault","formData","FormData","append","categoryId","parseInt","forEach","image","log","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","disabled","map","name","onDrop","getRootProps","getInputProps","class","href","length","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n//   }, []);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem('authToken');\n//     console.log('Auth Token:', authToken); // Add this line to log the authToken\n\n//     const headers = {\n//       'Authorization': `Bearer ${authToken}`,\n//       'Content-Type': 'multipart/form-data', // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n      // <form onSubmit={handleSubmit}>\n      //   <input\n      //     type=\"text\"\n      //     placeholder=\"Title\"\n      //     value={title}\n      //     onChange={(e) => setTitle(e.target.value)}\n      //     required\n      //   />\n      //   <textarea\n      //     placeholder=\"Content\"\n      //     value={content}\n      //     onChange={(e) => setContent(e.target.value)}\n      //     required\n      //   />\n      //   <select\n      //     value={category}\n      //     onChange={(e) => setCategory(e.target.value)}\n      //     required\n      //   >\n      //     <option value=\"\" disabled>\n      //       Select a category\n      //     </option>\n      //     {categories.map((category) => (\n      //       <option key={category.id} value={category.id}>\n      //         {category.name}\n      //       </option>\n      //     ))}\n      //   </select>\n      //   <Dropzone onDrop={handleImageDrop}>\n      //     {({ getRootProps, getInputProps }) => (\n      //       <div className=\"dropzone\" {...getRootProps()}>\n      //         <input {...getInputProps()} />\n      //         <p>Drag & drop images or click here to select files</p>\n      //       </div>\n      //     )}\n      //   </Dropzone>\n      //   <br />\n      //   <button class=\"fancy\" href=\"#\">\n      //     <span class=\"top-key\"></span>\n      //     <span class=\"text\">Create Post</span>\n      //     <span class=\"bottom-key-1\"></span>\n      //     <span class=\"bottom-key-2\"></span>\n      //   </button>\n      // </form>\n//     </div>\n//   );\n// };\n\n// export default CreatePost;\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\n\nconst CreatePost = ({ currentUser }) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios\n      .get(\"http://localhost:3001/categories\")\n      .then((response) => {\n        setCategories(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n      });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios\n        .get(`http://localhost:3001/users/${userId}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then((response) => {\n          setUserPosts(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching user posts:\", error);\n        });\n    }\n  }, [currentUser]);\n\n  const handleImageDrop = (acceptedFiles) => {\n    setImages(acceptedFiles);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n\n    // Ensure the category ID is an integer\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n\n    images.forEach((image) => formData.append(\"post[images][]\", image));\n\n    // Retrieve the user's authentication token from local storage\n    const authToken = localStorage.getItem(\"authToken\");\n    console.log(\"Auth Token:\", authToken);\n\n    const headers = {\n      Authorization: `Bearer ${authToken}`,\n      \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/posts\",\n        formData,\n        { headers }\n      );\n      console.log(\"Post created:\", response.data);\n      // Reset form fields\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  return (\n    <div className=\"create-post\">\n      <h2>Create a New Post</h2>\n      {/* Create Post form */}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          required\n        />\n        <select\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n          required\n        >\n          <option value=\"\" disabled>\n            Select a category\n          </option>\n          {categories.map((category) => (\n            <option key={category.id} value={category.id}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n        <Dropzone onDrop={handleImageDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <div className=\"dropzone\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <p>Drag & drop images or click here to select files</p>\n            </div>\n          )}\n        </Dropzone>\n        <br />\n        <button class=\"fancy\" href=\"#\">\n          <span class=\"top-key\"></span>\n          <span class=\"text\">Create Post</span>\n          <span class=\"bottom-key-1\"></span>\n          <span class=\"bottom-key-2\"></span>\n        </button>\n      </form>\n  \n      {/* Render the user's posts here */}\n      <div className=\"posts\">\n        <h3>Your Posts</h3>\n        {userPosts.length === 0 ? (\n          <p>No blogs, start your blogging journey</p>\n        ) : (\n          <div className=\"blog-cards-container\">\n            <ul>\n              {userPosts.map((post) => (\n                <li key={post.id}>\n                  <h4>{post.title}</h4>\n                  <p>{post.content}</p>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n              }\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n      // <form onSubmit={handleSubmit}>\n      //   <input\n      //     type=\"text\"\n      //     placeholder=\"Title\"\n      //     value={title}\n      //     onChange={(e) => setTitle(e.target.value)}\n      //     required\n      //   />\n      //   <textarea\n      //     placeholder=\"Content\"\n      //     value={content}\n      //     onChange={(e) => setContent(e.target.value)}\n      //     required\n      //   />\n      //   <select\n      //     value={category}\n      //     onChange={(e) => setCategory(e.target.value)}\n      //     required\n      //   >\n      //     <option value=\"\" disabled>\n      //       Select a category\n      //     </option>\n      //     {categories.map((category) => (\n      //       <option key={category.id} value={category.id}>\n      //         {category.name}\n      //       </option>\n      //     ))}\n      //   </select>\n      //   <Dropzone onDrop={handleImageDrop}>\n      //     {({ getRootProps, getInputProps }) => (\n      //       <div className=\"dropzone\" {...getRootProps()}>\n      //         <input {...getInputProps()} />\n      //         <p>Drag & drop images or click here to select files</p>\n      //       </div>\n      //     )}\n      //   </Dropzone>\n      //   <br />\n      //   <button className=\"fancy\" href=\"#\">\n      //     <span className=\"top-key\"></span>\n      //     <span className=\"text\">Create Post</span>\n      //     <span className=\"bottom-key-1\"></span>\n      //     <span className=\"bottom-key-2\"></span>\n      //   </button>\n      // </form>\n//     </div>\n//   );\n//   <div className=\"posts\">\n//     <h3>Your Posts</h3>\n//     {userPosts.length === 0 ? (\n//       <p>No blogs, start your blogging journey</p>\n//     ) : (\n//       <div className=\"blog-cards-container\">\n//         <ul>\n//           {userPosts.map((post) => (\n//             <li key={post.id}>\n//               <h4>{post.title}</h4>\n//               <p>{post.content}</p>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     )}\n//   </div>;\n// };\n\n\n"],"mappings":"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AAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEI,CAAC;;AAEf;AACA;AACA;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA9C,EAAA,CA1NMF,UAAU;AAAAkE,EAAA,GAAVlE,UAAU;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}