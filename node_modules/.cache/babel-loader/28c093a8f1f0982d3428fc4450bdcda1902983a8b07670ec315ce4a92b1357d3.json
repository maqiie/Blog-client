{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from 'axios';\nimport './Blogs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n  useEffect(() => {\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: 'application/json' // Specify JSON as the expected response\n      }\n    }).then(response => {\n      console.log('API Response Data:', response.data); // Log the entire response for debugging\n      setPosts(response.data);\n    }).catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the liked post\n    }).catch(error => {\n      console.error('Error liking post:', error);\n    });\n  };\n\n  // Function to handle disliking a post\n  const handleDislikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the disliked post\n    }).catch(error => {\n      console.error('Error disliking post:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-author\",\n          children: [\"By \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), post.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${apiBaseUrl}${post.image_url}` // Use the absolute image URL\n          ,\n          alt: post.title // Set an appropriate alt text\n          ,\n          className: \"post-image\",\n          onLoad: () => console.log('Image loaded successfully') // Log when the image is loaded\n          ,\n          onError: () => console.error('Image loading error') // Log if there's an error loading the image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLikePost(post.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-thumbs-up thumbs-up-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDislikePost(post.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-thumbs-down thumbs-down-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n_s(Blog, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","authToken","localStorage","getItem","apiBaseUrl","get","headers","Authorization","Accept","then","response","console","log","data","catch","error","handleLikePost","postId","post","handleDislikePost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","author","content","image_url","src","alt","onLoad","onError","onClick","id","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport axios from 'axios';\nimport './Blogs.css';\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n  useEffect(() => {\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: 'application/json', // Specify JSON as the expected response\n      },\n    })\n    .then(response => {\n      console.log('API Response Data:', response.data); // Log the entire response for debugging\n      setPosts(response.data);\n    })\n    .catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, [authToken, apiBaseUrl]);\n\n\n  const handleLikePost = (postId) => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n    .then(response => {\n      // Handle success, e.g., update the UI to reflect the liked post\n    })\n    .catch(error => {\n      console.error('Error liking post:', error);\n    });\n  };\n\n  // Function to handle disliking a post\n  const handleDislikePost = (postId) => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n    .then(response => {\n      // Handle success, e.g., update the UI to reflect the disliked post\n    })\n    .catch(error => {\n      console.error('Error disliking post:', error);\n    });\n  };\n\n  return (\n\n  <div className=\"blog\">\n      <h2>Latest Blog Posts</h2>\n      <div className=\"post-list\">\n        {posts.map((post, index) => (\n          <div key={index} className=\"post\">\n            <h3 className=\"post-title\">{post.title}</h3>\n            <p className=\"post-author\">By {post.author}</p>\n            <div className=\"post-content\">{post.content}</div>\n            {post.image_url && (\n              <img\n                src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n                alt={post.title} // Set an appropriate alt text\n                className=\"post-image\"\n                onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n                onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n              />\n            )}\n            <button onClick={() => handleLikePost(post.id)}>\n              {/* <i className=\"fa fa-thumbs-up\"></i>  */}\n              <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i> \n              {/* Thumbs up icon */}\n            </button>\n            <button onClick={() => handleDislikePost(post.id)}>\n              {/* <i className=\"fa fa-thumbs-down\"></i>  */}\n              <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i> \n              {/* Thumbs down icon */}\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n  \n};\n\nexport default Blog;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}