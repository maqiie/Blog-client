{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog-client/src/components/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport \"./Blogs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = ({\n  currentUserId\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const authToken = localStorage.getItem(\"authToken\");\n  const apiBaseUrl = \"http://localhost:3001\";\n  const [commentLikes, setCommentLikes] = useState({});\n\n  // State to store comments for each post\n  const [comments, setComments] = useState({});\n\n  // State for the new comment input\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    // Fetch blog posts with their like and dislike counts\n\n    fetchInitialLikesCounts();\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      setPosts(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = async postId => {\n    try {\n      // Send a POST request to like the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Post liked successfully\");\n\n      // Fetch the updated like count\n      const likeResponse = await axios.get(`${apiBaseUrl}/posts/${postId}/likes`);\n      const updatedLikeCount = likeResponse.data.likesCount;\n      console.log(\"Updated Like Count:\", updatedLikeCount);\n\n      // Update the UI to reflect the new like count\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        likes_count: updatedLikeCount\n      } : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislikePost = async postId => {\n    try {\n      // Send a POST request to dislike the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Post disliked successfully\");\n\n      // Fetch the updated dislike count\n      const dislikeResponse = await axios.get(`${apiBaseUrl}/posts/${postId}/dislikes`);\n      const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n      console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n      // Update the UI to reflect the new dislike count\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        dislikes_count: updatedDislikeCount\n      } : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handlePostClick = postId => {\n    // Toggle the expanded state of the post\n    if (postId === expandedPostId) {\n      // Collapse the post if it's already expanded\n      setExpandedPostId(null);\n    } else {\n      // Expand the clicked post\n      setExpandedPostId(postId);\n\n      // Fetch comments for the expanded post\n      fetchComments(postId);\n    }\n  };\n\n  // const fetchComments = async (postId) => {\n  //   try {\n  //     const response = await axios.get(\n  //       `${apiBaseUrl}/posts/${postId}/comments`,\n  //       {\n  //         headers: {\n  //           Authorization: `Bearer ${authToken}`,\n  //           Accept: \"application/json\",\n  //         },\n  //       }\n  //     );\n\n  //     const commentsData = response.data; // Assuming the response contains an array of comments\n\n  //     // Map the comments to extract user IDs\n  //     const commentsWithUserIds = commentsData.map((comment) => ({\n  //       ...comment,\n  //       userId: comment.user_id, // Extract the user ID\n  //     }));\n\n  //     // Update the comments state while preserving existing comments\n  //     setComments((prevComments) => ({\n  //       ...prevComments,\n  //       [postId]: commentsWithUserIds,\n  //     }));\n  //   } catch (error) {\n  //     console.error(\"Error fetching comments:\", error);\n  //   }\n  // };\n  const fetchComments = async postId => {\n    try {\n      const response = await axios.get(`${apiBaseUrl}/posts/${postId}/comments`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\"\n        }\n      });\n      const commentsData = response.data; // Assuming the response contains an array of comments\n\n      // Map the comments to extract user IDs\n      const commentsWithUserIds = commentsData.map(comment => ({\n        ...comment,\n        userId: comment.user_id // Extract the user ID\n      }));\n\n      // Initialize comment likes in the state\n      const initialCommentLikes = commentsWithUserIds.reduce((likes, comment) => ({\n        ...likes,\n        [comment.id]: comment.likes_count || 0\n      }), {});\n\n      // Update the comments state while preserving existing comments and initialize comment likes\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: commentsWithUserIds\n      }));\n\n      // Initialize comment likes state\n      setCommentLikes(prevLikes => ({\n        ...prevLikes,\n        [postId]: initialCommentLikes\n      }));\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const handleCommentSubmit = async postId => {\n    try {\n      // Send a POST request to add a new comment\n      const response = await axios.post(`${apiBaseUrl}/posts/${postId}/comments`, {\n        comment: {\n          content: newComment\n        }\n      }, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Clear the input field after successful submission\n      setNewComment(\"\");\n\n      // After adding a new comment, update the comments state with the new comment\n      const newCommentData = response.data; // Assuming the response contains the new comment data\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData]\n      }));\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleLikeComment = async (postId, commentId) => {\n    try {\n      // Send a POST request to like the comment\n      await axios.post(`${apiBaseUrl}/posts/${postId}/comments/${commentId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      const likeResponse = await axios.get(`${apiBaseUrl}/posts/${postId}/comments/${commentId}/likes`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\" // Make sure to include this header\n        }\n      });\n\n      console.log('Like Response:', likeResponse.data);\n      const updatedLikeCount = likeResponse.data.likesCount;\n\n      // Update the UI to reflect the new like count for the comment\n      setCommentLikes(prevLikes => ({\n        ...prevLikes,\n        [postId]: {\n          ...prevLikes[postId],\n          [commentId]: updatedLikeCount\n        }\n      }));\n    } catch (error) {\n      console.error(\"Error liking comment:\", error);\n    }\n  };\n  const fetchInitialLikesCounts = async () => {\n    try {\n      const likesCounts = await Promise.all(comments.map(comment => axios.get(`${apiBaseUrl}/posts/${postId}/comments/${comment.id}/likes`)));\n\n      // Process and store the initial likes counts in state\n      const initialLikesCountsMap = {};\n      likesCounts.forEach((response, index) => {\n        const commentId = comments[index].id;\n        initialLikesCountsMap[commentId] = response.data.likesCount;\n      });\n\n      // Set the initial likes counts in state\n      setCommentLikes(initialLikesCountsMap);\n    } catch (error) {\n      console.error(\"Error fetching initial likes counts:\", error);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    try {\n      // Send a DELETE request to remove the comment\n      await axios.delete(`${apiBaseUrl}/posts/${postId}/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Comment deleted successfully\");\n\n      // Update the UI to remove the deleted comment\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter(comment => comment.id !== commentId)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2\",\n      children: \"Latest Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post ${post.id === expandedPostId ? \"expanded\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-author\",\n          children: [\"By \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.id === expandedPostId ? post.content : post.content.slice(0, 200) + \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), post.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${apiBaseUrl}${post.image_url}`,\n          alt: post.title,\n          className: \"post-image\",\n          onLoad: () => console.log(\"Image loaded successfully\"),\n          onError: () => console.error(\"Image loading error\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLikePost(post.id),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-thumbs-up thumbs-up-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.likes_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDislikePost(post.id),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-thumbs-down thumbs-down-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.dislikes_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-more\",\n          onClick: () => handlePostClick(post.id),\n          children: post.id === expandedPostId ? \"Read Less\" : \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), post.id === expandedPostId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this), console.log(\"Expanded Post ID:\", expandedPostId), console.log(\"Current Post ID:\", post.id), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: comments[post.id] && comments[post.id].map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"container1\",\n                  onClick: () => handleLikeComment(post.id, comment.id),\n                  children: [\"Likes\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: commentLikes[post.id][comment.id]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 29\n                  }, this), \"Likes: \", commentLikes[comment.id], /*#__PURE__*/_jsxDEV(\"input\", {\n                    checked: \"checked\",\n                    type: \"checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"checkmark\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      viewBox: \"0 0 256 256\",\n                      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                        fill: \"none\",\n                        height: \"256\",\n                        width: \"256\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M224.6,51.9a59.5,59.5,0,0,0-43-19.9,60.5,60.5,0,0,0-44,17.6L128,59.1l-7.5-7.4C97.2,28.3,59.2,26.3,35.9,47.4a59.9,59.9,0,0,0-2.3,87l83.1,83.1a15.9,15.9,0,0,0,22.6,0l81-81C243.7,113.2,245.6,75.2,224.6,51.9Z\",\n                        \"stroke-width\": \"20px\",\n                        stroke: \"#FFF\",\n                        fill: \"none\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 25\n              }, this), comment.content, console.log(\"Checking condition: \", comment.user_id, currentUserId), (comment.userId === currentUserId || !comment.content) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-actions\",\n                children: [console.log(\"Delete button should be displayed here\"), /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn\",\n                  onClick: () => handleDeleteComment(post.id, comment.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    class: \"paragraph\",\n                    children: \" delete \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"icon-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      class: \"icon\",\n                      width: \"30px\",\n                      height: \"30px\",\n                      viewBox: \"0 0 24 24\",\n                      fill: \"none\",\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M6 7V18C6 19.1046 6.89543 20 8 20H16C17.1046 20 18 19.1046 18 18V7M6 7H5M6 7H8M18 7H19M18 7H16M10 11V16M14 11V16M8 7V5C8 3.89543 8.89543 3 10 3H14C15.1046 3 16 3.89543 16 5V7M8 7H16\",\n                        stroke: \"#000000\",\n                        \"stroke-width\": \"2\",\n                        \"stroke-linecap\": \"round\",\n                        \"stroke-linejoin\": \"round\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"div\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"div\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 27\n              }, this)]\n            }, commentIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment...\",\n              value: newComment,\n              onChange: e => setNewComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bookmarkBtn\",\n              onClick: () => handleCommentSubmit(post.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"IconContainer2\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  fill: \"white\",\n                  viewBox: \"0 0 512 512\",\n                  height: \"1em\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c-4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s(Blog, \"ifUEGhL2SGwZs6pBrzqtEUdRv+E=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Blog","currentUserId","_s","posts","setPosts","expandedPostId","setExpandedPostId","authToken","localStorage","getItem","apiBaseUrl","commentLikes","setCommentLikes","comments","setComments","newComment","setNewComment","fetchInitialLikesCounts","get","headers","Authorization","Accept","then","response","data","catch","error","console","handleLikePost","postId","post","log","likeResponse","updatedLikeCount","likesCount","prevPosts","map","id","likes_count","handleDislikePost","dislikeResponse","updatedDislikeCount","dislikesCount","dislikes_count","handlePostClick","fetchComments","commentsData","commentsWithUserIds","comment","userId","user_id","initialCommentLikes","reduce","likes","prevComments","prevLikes","handleCommentSubmit","content","newCommentData","handleLikeComment","commentId","likesCounts","Promise","all","initialLikesCountsMap","forEach","index","handleDeleteComment","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author","slice","image_url","src","alt","onLoad","onError","onClick","commentIndex","class","checked","type","viewBox","fill","height","width","d","stroke","xmlns","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog-client/src/components/Blogs/Blogs.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport \"./Blogs.css\";\n\nconst Blog = ({ currentUserId }) => {\n  const [posts, setPosts] = useState([]);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const authToken = localStorage.getItem(\"authToken\");\n  const apiBaseUrl = \"http://localhost:3001\";\n  const [commentLikes, setCommentLikes] = useState({});\n\n  // State to store comments for each post\n  const [comments, setComments] = useState({});\n\n  // State for the new comment input\n  const [newComment, setNewComment] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch blog posts with their like and dislike counts\n\n    fetchInitialLikesCounts();\n    axios\n      .get(`${apiBaseUrl}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\",\n        },\n      })\n      .then((response) => {\n        setPosts(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching posts:\", error);\n      });\n  }, [authToken, apiBaseUrl]);\n \n\n  const handleLikePost = async (postId) => {\n    try {\n      // Send a POST request to like the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n\n      console.log(\"Post liked successfully\");\n\n      // Fetch the updated like count\n      const likeResponse = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/likes`\n      );\n\n      const updatedLikeCount = likeResponse.data.likesCount;\n\n      console.log(\"Updated Like Count:\", updatedLikeCount);\n\n      // Update the UI to reflect the new like count\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId\n            ? {\n                ...post,\n                likes_count: updatedLikeCount,\n              }\n            : post\n        )\n      );\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n\n  const handleDislikePost = async (postId) => {\n    try {\n      // Send a POST request to dislike the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n\n      console.log(\"Post disliked successfully\");\n\n      // Fetch the updated dislike count\n      const dislikeResponse = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/dislikes`\n      );\n\n      const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n\n      console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n      // Update the UI to reflect the new dislike count\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId\n            ? {\n                ...post,\n                dislikes_count: updatedDislikeCount,\n              }\n            : post\n        )\n      );\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n\n  const handlePostClick = (postId) => {\n    // Toggle the expanded state of the post\n    if (postId === expandedPostId) {\n      // Collapse the post if it's already expanded\n      setExpandedPostId(null);\n    } else {\n      // Expand the clicked post\n      setExpandedPostId(postId);\n\n      // Fetch comments for the expanded post\n      fetchComments(postId);\n    }\n  };\n\n  // const fetchComments = async (postId) => {\n  //   try {\n  //     const response = await axios.get(\n  //       `${apiBaseUrl}/posts/${postId}/comments`,\n  //       {\n  //         headers: {\n  //           Authorization: `Bearer ${authToken}`,\n  //           Accept: \"application/json\",\n  //         },\n  //       }\n  //     );\n\n  //     const commentsData = response.data; // Assuming the response contains an array of comments\n\n  //     // Map the comments to extract user IDs\n  //     const commentsWithUserIds = commentsData.map((comment) => ({\n  //       ...comment,\n  //       userId: comment.user_id, // Extract the user ID\n  //     }));\n\n  //     // Update the comments state while preserving existing comments\n  //     setComments((prevComments) => ({\n  //       ...prevComments,\n  //       [postId]: commentsWithUserIds,\n  //     }));\n  //   } catch (error) {\n  //     console.error(\"Error fetching comments:\", error);\n  //   }\n  // };\n  const fetchComments = async (postId) => {\n    try {\n      const response = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/comments`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            Accept: \"application/json\",\n          },\n        }\n      );\n\n      const commentsData = response.data; // Assuming the response contains an array of comments\n\n      // Map the comments to extract user IDs\n      const commentsWithUserIds = commentsData.map((comment) => ({\n        ...comment,\n        userId: comment.user_id, // Extract the user ID\n      }));\n\n      // Initialize comment likes in the state\n      const initialCommentLikes = commentsWithUserIds.reduce(\n        (likes, comment) => ({\n          ...likes,\n          [comment.id]: comment.likes_count || 0,\n        }),\n        {}\n      );\n\n      // Update the comments state while preserving existing comments and initialize comment likes\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: commentsWithUserIds,\n      }));\n\n      // Initialize comment likes state\n      setCommentLikes((prevLikes) => ({\n        ...prevLikes,\n        [postId]: initialCommentLikes,\n      }));\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n\n  const handleCommentSubmit = async (postId) => {\n    try {\n      // Send a POST request to add a new comment\n      const response = await axios.post(\n        `${apiBaseUrl}/posts/${postId}/comments`,\n        { comment: { content: newComment } },\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Clear the input field after successful submission\n      setNewComment(\"\");\n\n      // After adding a new comment, update the comments state with the new comment\n      const newCommentData = response.data; // Assuming the response contains the new comment data\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData],\n      }));\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  \n  const handleLikeComment = async (postId, commentId) => {\n    try {\n      // Send a POST request to like the comment\n      await axios.post(\n        `${apiBaseUrl}/posts/${postId}/comments/${commentId}/like`,\n        \n        null,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n         \n        }\n      );\n  \n     \n      const likeResponse = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/comments/${commentId}/likes`,\n\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            Accept: \"application/json\", // Make sure to include this header\n          },\n          \n        }\n      );\n      console.log('Like Response:', likeResponse.data);\n      \n  \n      const updatedLikeCount = likeResponse.data.likesCount;\n  \n      // Update the UI to reflect the new like count for the comment\n      setCommentLikes((prevLikes) => ({\n        ...prevLikes,\n        [postId]: {\n          ...prevLikes[postId],\n          [commentId]: updatedLikeCount,\n        },\n      }));\n    } catch (error) {\n      console.error(\"Error liking comment:\", error);\n    }\n  };\n  const fetchInitialLikesCounts = async () => {\n    try {\n      const likesCounts = await Promise.all(\n        comments.map((comment) =>\n          axios.get(\n            `${apiBaseUrl}/posts/${postId}/comments/${comment.id}/likes`\n          )\n        )\n      );\n  \n      // Process and store the initial likes counts in state\n      const initialLikesCountsMap = {};\n      likesCounts.forEach((response, index) => {\n        const commentId = comments[index].id;\n        initialLikesCountsMap[commentId] = response.data.likesCount;\n      });\n  \n      // Set the initial likes counts in state\n      setCommentLikes(initialLikesCountsMap);\n    } catch (error) {\n      console.error(\"Error fetching initial likes counts:\", error);\n    }\n  };\n  \n  \n\n  const handleDeleteComment = async (postId, commentId) => {\n    try {\n      // Send a DELETE request to remove the comment\n      await axios.delete(\n        `${apiBaseUrl}/posts/${postId}/comments/${commentId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n\n      console.log(\"Comment deleted successfully\");\n\n      // Update the UI to remove the deleted comment\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter(\n          (comment) => comment.id !== commentId\n        ),\n      }));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n\n  return (\n    <div className=\"blog\">\n      <h2 className=\"h2\">Latest Blog Posts</h2>\n      <div className=\"post-list\">\n        {posts.map((post, index) => (\n          <div\n            key={index}\n            className={`post ${post.id === expandedPostId ? \"expanded\" : \"\"}`}\n          >\n            <h3 className=\"post-title\">{post.title}</h3>\n            <p className=\"post-author\">By {post.author}</p>\n            <div className=\"post-content\">\n              {post.id === expandedPostId\n                ? post.content\n                : post.content.slice(0, 200) + \"...\"}\n            </div>\n            {post.image_url && (\n              <img\n                src={`${apiBaseUrl}${post.image_url}`}\n                alt={post.title}\n                className=\"post-image\"\n                onLoad={() => console.log(\"Image loaded successfully\")}\n                onError={() => console.error(\"Image loading error\")}\n              />\n            )}\n            <div>\n              <button onClick={() => handleLikePost(post.id)}>\n                <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n                <span>{post.likes_count}</span>\n              </button>\n              <button onClick={() => handleDislikePost(post.id)}>\n                <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n                <span>{post.dislikes_count}</span>\n              </button>\n            </div>\n            <div className=\"read-more\" onClick={() => handlePostClick(post.id)}>\n              {post.id === expandedPostId ? \"Read Less\" : \"Read More\"}\n            </div>\n            {post.id === expandedPostId && (\n              <div className=\"comments-section\">\n                <h4>Comments:</h4>\n                {console.log(\"Expanded Post ID:\", expandedPostId)}\n                {console.log(\"Current Post ID:\", post.id)}\n\n                <ul>\n                  {comments[post.id] &&\n                    comments[post.id].map((comment, commentIndex) => (\n                      <li key={commentIndex}>\n                        <div className=\"comment-actions\">\n                          \n                          <button class=\"container1\"\n                          onClick={() =>\n                            handleLikeComment(post.id, comment.id)\n                          }\n                          >\n                             Likes{\" \"}\n                            <span>{commentLikes[post.id][comment.id]}</span>\n                            Likes: {commentLikes[comment.id]}\n                            <input checked=\"checked\" type=\"checkbox\" />\n                            <div class=\"checkmark\">\n                              <svg viewBox=\"0 0 256 256\">\n                                <rect\n                                  fill=\"none\"\n                                  height=\"256\"\n                                  width=\"256\"\n                                ></rect>\n                                <path\n                                  d=\"M224.6,51.9a59.5,59.5,0,0,0-43-19.9,60.5,60.5,0,0,0-44,17.6L128,59.1l-7.5-7.4C97.2,28.3,59.2,26.3,35.9,47.4a59.9,59.9,0,0,0-2.3,87l83.1,83.1a15.9,15.9,0,0,0,22.6,0l81-81C243.7,113.2,245.6,75.2,224.6,51.9Z\"\n                                  stroke-width=\"20px\"\n                                  stroke=\"#FFF\"\n                                  fill=\"none\"\n                                ></path>\n                              </svg>\n                            </div>\n                          </button>\n                        </div>\n                        {comment.content}\n                        {console.log(\n                          \"Checking condition: \",\n                          comment.user_id,\n                          currentUserId\n                        )}\n                        {(comment.userId === currentUserId ||\n                          !comment.content) && (\n                          <div className=\"comment-actions\">\n                            {console.log(\n                              \"Delete button should be displayed here\"\n                            )}\n\n                            <button\n                              class=\"btn\"\n                              onClick={() =>\n                                handleDeleteComment(post.id, comment.id)\n                              }\n                            >\n                              <p class=\"paragraph\"> delete </p>\n                              <span class=\"icon-wrapper\">\n                                <svg\n                                  class=\"icon\"\n                                  width=\"30px\"\n                                  height=\"30px\"\n                                  viewBox=\"0 0 24 24\"\n                                  fill=\"none\"\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                  <path\n                                    d=\"M6 7V18C6 19.1046 6.89543 20 8 20H16C17.1046 20 18 19.1046 18 18V7M6 7H5M6 7H8M18 7H19M18 7H16M10 11V16M14 11V16M8 7V5C8 3.89543 8.89543 3 10 3H14C15.1046 3 16 3.89543 16 5V7M8 7H16\"\n                                    stroke=\"#000000\"\n                                    stroke-width=\"2\"\n                                    stroke-linecap=\"round\"\n                                    stroke-linejoin=\"round\"\n                                  ></path>\n                                </svg>\n                              </span>\n                            </button>\n                            <div class=\"div\">\n                              <small>\n                                <i></i>\n                              </small>\n                            </div>\n\n                            <div className=\"div\">\n                              <small>\n                                <i></i>\n                              </small>\n                            </div>\n                          </div>\n                        )}\n                      </li>\n                    ))}\n                </ul>\n\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Add a comment...\"\n                    value={newComment}\n                    onChange={(e) => setNewComment(e.target.value)}\n                  />\n                  <button\n                    className=\"bookmarkBtn\"\n                    onClick={() => handleCommentSubmit(post.id)}\n                  >\n                    <span className=\"IconContainer2\">\n                      <svg fill=\"white\" viewBox=\"0 0 512 512\" height=\"1em\">\n                        <path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c-4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"></path>\n                      </svg>\n                    </span>\n                    <p className=\"text\">Comment</p>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}