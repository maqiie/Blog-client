{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog/client/src/components/register/login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [rememberMe, setRememberMe] = useState(false); // Added state for \"Remember me\"\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n//         email,\n//         password,\n//         remember_me: rememberMe, // Send \"Remember me\" value in the request\n//       });\n\n//       if (response.status === 200) {\n//         // Login successful, store the token in local storage\n//         const authToken = response.headers[\"access-token\"];\n//         const client = response.headers[\"client\"];\n//         const uid = response.headers[\"uid\"];\n\n//         localStorage.setItem(\"authToken\", authToken);\n//         localStorage.setItem(\"client\", client);\n//         localStorage.setItem(\"uid\", uid);\n\n//         // Check if the token is stored\n//         console.log(\"Login successful\");\n//         console.log(\"Stored authToken:\", authToken);\n//         console.log(\"Stored client:\", client);\n//         console.log(\"Stored uid:\", uid);\n\n//         // You can handle redirection or other actions here\n//       } else {\n//         // Handle login error\n//         console.log(\"Login failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in:\", error);\n//     }\n//   };\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from React Router\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onToggleForm\n}) => {\n  _s();\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  useEffect(() => {\n    // Check for login state in local storage when the component mounts\n    const authToken = localStorage.getItem(\"authToken\");\n    if (authToken) {\n      // If the user is already logged in, navigate to the desired route\n      navigate(\"\"); // Change \"/dashboard\" to the route you want to navigate to\n    }\n  }, [navigate]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n        email,\n        password,\n        remember_me: rememberMe\n      });\n      if (response.status === 200) {\n        const authToken = response.headers[\"access-token\"];\n        const client = response.headers[\"client\"];\n        const uid = response.headers[\"uid\"];\n        localStorage.setItem(\"authToken\", authToken);\n        localStorage.setItem(\"client\", client);\n        localStorage.setItem(\"uid\", uid);\n        console.log(\"Login successful\");\n        console.log(\"Stored authToken:\", authToken);\n        console.log(\"Stored client:\", client);\n        console.log(\"Stored uid:\", uid);\n\n        // Navigate to the desired route after a successful login\n        navigate(\"/dashboard\"); // Change \"/dashboard\" to the route you want to navigate to\n      } else {\n        console.log(\"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form bg-white p-6 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4 text-blue-600\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-600\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-600\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: rememberMe,\n            onChange: () => setRememberMe(!rememberMe),\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), \"Remember me\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onToggleForm,\n        className: \"text-blue-500 hover:underline focus:outline-none\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"YT44EcMm8p4B7tgmXXgxK7lmYwE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Login","onToggleForm","_s","navigate","email","setEmail","password","setPassword","rememberMe","setRememberMe","authToken","localStorage","getItem","handleLogin","e","preventDefault","response","post","remember_me","status","headers","client","uid","setItem","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","checked","onClick","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/register/login.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [rememberMe, setRememberMe] = useState(false); // Added state for \"Remember me\"\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n//         email,\n//         password,\n//         remember_me: rememberMe, // Send \"Remember me\" value in the request\n//       });\n\n//       if (response.status === 200) {\n//         // Login successful, store the token in local storage\n//         const authToken = response.headers[\"access-token\"];\n//         const client = response.headers[\"client\"];\n//         const uid = response.headers[\"uid\"];\n\n//         localStorage.setItem(\"authToken\", authToken);\n//         localStorage.setItem(\"client\", client);\n//         localStorage.setItem(\"uid\", uid);\n\n//         // Check if the token is stored\n//         console.log(\"Login successful\");\n//         console.log(\"Stored authToken:\", authToken);\n//         console.log(\"Stored client:\", client);\n//         console.log(\"Stored uid:\", uid);\n\n//         // You can handle redirection or other actions here\n//       } else {\n//         // Handle login error\n//         console.log(\"Login failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in:\", error);\n//     }\n//   };\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from React Router\n\nconst Login = ({ onToggleForm }) => {\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n\n  useEffect(() => {\n    // Check for login state in local storage when the component mounts\n    const authToken = localStorage.getItem(\"authToken\");\n    if (authToken) {\n      // If the user is already logged in, navigate to the desired route\n      navigate(\"\"); // Change \"/dashboard\" to the route you want to navigate to\n    }\n  }, [navigate]);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n        email,\n        password,\n        remember_me: rememberMe,\n      });\n\n      if (response.status === 200) {\n        const authToken = response.headers[\"access-token\"];\n        const client = response.headers[\"client\"];\n        const uid = response.headers[\"uid\"];\n\n        localStorage.setItem(\"authToken\", authToken);\n        localStorage.setItem(\"client\", client);\n        localStorage.setItem(\"uid\", uid);\n\n        console.log(\"Login successful\");\n        console.log(\"Stored authToken:\", authToken);\n        console.log(\"Stored client:\", client);\n        console.log(\"Stored uid:\", uid);\n\n        // Navigate to the desired route after a successful login\n        navigate(\"/dashboard\"); // Change \"/dashboard\" to the route you want to navigate to\n      } else {\n        console.log(\"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n    }\n  };\n  return (\n    <div className=\"auth-form bg-white p-6 rounded shadow\">\n      <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Login</h2>\n      <form onSubmit={handleLogin}>\n        <div className=\"mb-3\">\n          <label className=\"block text-sm font-medium text-gray-600\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"block text-sm font-medium text-gray-600\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"block text-sm font-medium text-gray-600\">\n            <input\n              type=\"checkbox\"\n              checked={rememberMe}\n              onChange={() => setRememberMe(!rememberMe)}\n              className=\"mr-1\"\n            />\n            Remember me\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\"\n        >\n          Login\n        </button>\n      </form>\n      <p className=\"mt-4\">\n        Don't have an account?{\" \"}\n        <button\n          onClick={onToggleForm}\n          className=\"text-blue-500 hover:underline focus:outline-none\"\n        >\n          Sign Up\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}