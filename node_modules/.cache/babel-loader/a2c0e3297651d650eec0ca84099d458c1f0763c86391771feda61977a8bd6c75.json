{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { AiFillLike, AiFillDislike } from 'react-icons/ai';\n\nimport axios from 'axios';\nimport './Blogs.css';\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n  useEffect(() => {\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: 'application/json' // Specify JSON as the expected response\n      }\n    }).then(response => {\n      console.log('API Response Data:', response.data); // Log the entire response for debugging\n      setPosts(response.data);\n    }).catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the liked post\n    }).catch(error => {\n      console.error('Error liking post:', error);\n    });\n  };\n\n  // Function to handle disliking a post\n  const handleDislikePost = postId => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Handle success, e.g., update the UI to reflect the disliked post\n    }).catch(error => {\n      console.error('Error disliking post:', error);\n    });\n  };\n\n  // return (\n  //   <div className=\"blog\">\n  //     <h2>Latest Blog Posts</h2>\n  //     <div className=\"post-list\">\n  //       {posts.map((post, index) => (\n  //         <div key={index} className=\"post\">\n  //           <h3 className=\"post-title\">{post.title}</h3>\n  //           <p className=\"post-author\">By {post.author}</p>\n  //           <div className=\"post-content\">{post.content}</div>\n  //           {post.image_url && (\n  //             <img\n  //               src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n  //               alt={post.title} // Set an appropriate alt text\n  //               className=\"post-image\"\n  //               onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n  //               onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n  //             />\n  //           )}\n  //           <button onClick={() => handleLikePost(post.id)}>Like</button>\n  //           <button onClick={() => handleDislikePost(post.id)}>Dislike</button>\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n};\n_s(Blog, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","axios","Blog","_s","posts","setPosts","authToken","localStorage","getItem","apiBaseUrl","get","headers","Authorization","Accept","then","response","console","log","data","catch","error","handleLikePost","postId","post","handleDislikePost","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/Blogs/Blogs.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n// import { AiFillLike, AiFillDislike } from 'react-icons/ai';\n\nimport axios from 'axios';\nimport './Blogs.css';\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const authToken = localStorage.getItem('authToken'); // Assuming you store the authentication token in local storage\n  const apiBaseUrl = 'http://localhost:3001'; // Replace with your actual API base URL\n\n  useEffect(() => {\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: 'application/json', // Specify JSON as the expected response\n      },\n    })\n    .then(response => {\n      console.log('API Response Data:', response.data); // Log the entire response for debugging\n      setPosts(response.data);\n    })\n    .catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, [authToken, apiBaseUrl]);\n\n\n  const handleLikePost = (postId) => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n    .then(response => {\n      // Handle success, e.g., update the UI to reflect the liked post\n    })\n    .catch(error => {\n      console.error('Error liking post:', error);\n    });\n  };\n\n  // Function to handle disliking a post\n  const handleDislikePost = (postId) => {\n    axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    })\n    .then(response => {\n      // Handle success, e.g., update the UI to reflect the disliked post\n    })\n    .catch(error => {\n      console.error('Error disliking post:', error);\n    });\n  };\n\n  // return (\n  //   <div className=\"blog\">\n  //     <h2>Latest Blog Posts</h2>\n  //     <div className=\"post-list\">\n  //       {posts.map((post, index) => (\n  //         <div key={index} className=\"post\">\n  //           <h3 className=\"post-title\">{post.title}</h3>\n  //           <p className=\"post-author\">By {post.author}</p>\n  //           <div className=\"post-content\">{post.content}</div>\n  //           {post.image_url && (\n  //             <img\n  //               src={`${apiBaseUrl}${post.image_url}`} // Use the absolute image URL\n  //               alt={post.title} // Set an appropriate alt text\n  //               className=\"post-image\"\n  //               onLoad={() => console.log('Image loaded successfully')} // Log when the image is loaded\n  //               onError={() => console.error('Image loading error')} // Log if there's an error loading the image\n  //             />\n  //           )}\n  //           <button onClick={() => handleLikePost(post.id)}>Like</button>\n  //           <button onClick={() => handleDislikePost(post.id)}>Dislike</button>\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n  \n};\n\nexport default Blog;\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;;AAEA,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMO,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACrD,MAAMC,UAAU,GAAG,uBAAuB,CAAC,CAAC;;EAE5CT,SAAS,CAAC,MAAM;IACdC,KAAK,CAACS,GAAG,CAAE,GAAED,UAAW,QAAO,EAAE;MAC/BE,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,SAAU,EAAC;QACpCO,MAAM,EAAE,kBAAkB,CAAE;MAC9B;IACF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAClDb,QAAQ,CAACU,QAAQ,CAACG,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC,EAAE,CAACd,SAAS,EAAEG,UAAU,CAAC,CAAC;EAG3B,MAAMY,cAAc,GAAIC,MAAM,IAAK;IACjCrB,KAAK,CAACsB,IAAI,CAAE,GAAEd,UAAW,UAASa,MAAO,OAAM,EAAE,IAAI,EAAE;MACrDX,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,SAAU;MACrC;IACF,CAAC,CAAC,CACDQ,IAAI,CAACC,QAAQ,IAAI;MAChB;IAAA,CACD,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMI,iBAAiB,GAAIF,MAAM,IAAK;IACpCrB,KAAK,CAACsB,IAAI,CAAE,GAAEd,UAAW,UAASa,MAAO,UAAS,EAAE,IAAI,EAAE;MACxDX,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,SAAU;MACrC;IACF,CAAC,CAAC,CACDQ,IAAI,CAACC,QAAQ,IAAI;MAChB;IAAA,CACD,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEF,CAAC;AAACjB,EAAA,CA7EID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA+EV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}