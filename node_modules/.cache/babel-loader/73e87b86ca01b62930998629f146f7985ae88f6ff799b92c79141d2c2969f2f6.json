{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog/Blog-client/src/components/Categories/Technology.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './Art.css';\n// import BlogCard from './BlogCard';\n\n// const Technology = () => {\n//   const [blogs, setBlogs] = useState([]);\n\n//   useEffect(() => {\n//     // Replace 'your_category' with the actual category you want to fetch\n//     const category = 'Technology';\n\n//     // Fetch blogs from the backend for the specified category\n//     fetch(`http://localhost:3001/posts/category/${category}`) // Update the endpoint path\n\n//       .then(response => response.json())\n//       .then(data => {\n//         console.log('Fetched data:', data); // Log the fetched data\n//         setBlogs(data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching blogs:', error); // Log any errors\n//       });\n//   }, []);\n\n//   return (\n//     <div className='category-wrapper'>\n//       {blogs.map(blog => (\n//         <BlogCard key={blog.id} category='Technology' {...blog} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Technology;\n\nimport React, { useState, useEffect } from 'react';\nimport './Art.css'; // Update the CSS file name\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Technology = ({\n  categoryId\n}) => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [expandedCard, setExpandedCard] = useState(null); // Track the expanded card's index\n\n  // Define the togglePostVisibility function\n  const togglePostVisibility = index => {\n    if (expandedCard === index) {\n      // If the clicked card is already expanded, close it\n      setExpandedCard(null);\n    } else {\n      // Expand the clicked card and close others\n      setExpandedCard(index);\n    }\n  };\n  useEffect(() => {\n    // Fetch data from the backend using the dynamic categoryId\n    axios.get(`http://localhost:3001/categories/10/posts`).then(response => {\n      const data = response.data.map(blog => ({\n        id: blog.id,\n        title: blog.title,\n        content: blog.content,\n        image: blog.image_url // Assuming image_url contains the image URL\n      }));\n\n      console.log('Fetched data:', data); // Log the fetched data\n      setBlogs(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error); // Log any errors\n    });\n  }, [categoryId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Technology-wrapper\",\n    children: [\" \", blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `blog-card ${expandedCard === index ? 'expanded' : ''}`,\n      onClick: () => togglePostVisibility(index) // Toggle visibility on click\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post-content ${expandedCard === index ? 'visible' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: expandedCard === index ? blog.content : blog.content.slice(0, 200) + '...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), blog.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: blog.image,\n          alt: `Image for ${blog.title}`,\n          className: \"blog-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Technology, \"hE0CI+E2XWcLKqWRc+ZzUUSj8MU=\");\n_c = Technology;\nexport default Technology;\nvar _c;\n$RefreshReg$(_c, \"Technology\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Technology","categoryId","_s","blogs","setBlogs","expandedCard","setExpandedCard","togglePostVisibility","index","get","then","response","data","map","blog","id","title","content","image","image_url","console","log","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","src","alt","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/Blog-client/src/components/Categories/Technology.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './Art.css';\n// import BlogCard from './BlogCard';\n\n// const Technology = () => {\n//   const [blogs, setBlogs] = useState([]);\n\n//   useEffect(() => {\n//     // Replace 'your_category' with the actual category you want to fetch\n//     const category = 'Technology';\n\n//     // Fetch blogs from the backend for the specified category\n//     fetch(`http://localhost:3001/posts/category/${category}`) // Update the endpoint path\n    \n//       .then(response => response.json())\n//       .then(data => {\n//         console.log('Fetched data:', data); // Log the fetched data\n//         setBlogs(data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching blogs:', error); // Log any errors\n//       });\n//   }, []);\n\n//   return (\n//     <div className='category-wrapper'>\n//       {blogs.map(blog => (\n//         <BlogCard key={blog.id} category='Technology' {...blog} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Technology;\n\nimport React, { useState, useEffect } from 'react';\nimport './Art.css'; // Update the CSS file name\nimport axios from 'axios';\n\nconst Technology = ({ categoryId }) => {\n  const [blogs, setBlogs] = useState([]);\n  const [expandedCard, setExpandedCard] = useState(null); // Track the expanded card's index\n\n  // Define the togglePostVisibility function\n  const togglePostVisibility = (index) => {\n    if (expandedCard === index) {\n      // If the clicked card is already expanded, close it\n      setExpandedCard(null);\n    } else {\n      // Expand the clicked card and close others\n      setExpandedCard(index);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch data from the backend using the dynamic categoryId\n    axios\n      .get(`http://localhost:3001/categories/10/posts`)\n      .then((response) => {\n        const data = response.data.map((blog) => ({\n          id: blog.id,\n          title: blog.title,\n          content: blog.content,\n          image: blog.image_url, // Assuming image_url contains the image URL\n        }));\n        console.log('Fetched data:', data); // Log the fetched data\n        setBlogs(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error); // Log any errors\n      });\n  }, [categoryId]);\n\n  return (\n    <div className=\"Technology-wrapper\"> {/* Update the class name */}\n      {blogs.map((blog, index) => (\n        <div\n          className={`blog-card ${expandedCard === index ? 'expanded' : ''}`}\n          key={blog.id}\n          onClick={() => togglePostVisibility(index)} // Toggle visibility on click\n        >\n          <h2>{blog.title}</h2>\n          <div className={`post-content ${expandedCard === index ? 'visible' : ''}`}>\n            <p>{expandedCard === index ? blog.content : blog.content.slice(0, 200) + '...'}</p>\n            {blog.image && (\n              <img src={blog.image} alt={`Image for ${blog.title}`} className=\"blog-image\" />\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Technology;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}