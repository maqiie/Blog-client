{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  currentUser\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [showCreatePost, setShowCreatePost] = useState(true);\n  const userId = user.id;\n  const forceUpdate = useRef(0);\n  const handleForceUpdate = () => {\n    forceUpdate.current += 1;\n  };\n  const getCategoryName = categoryId => {\n    const category = categories.find(cat => cat.id === categoryId);\n    return category ? category.name : \"Unknown Category\";\n  };\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios.get(\"http://localhost:3001/categories\").then(response => {\n      setCategories(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n    });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios.get(`http://localhost:3001/users/${userId}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(response => {\n        setUserPosts(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n      });\n    }\n    handleForceUpdate();\n  }, [currentUser]);\n  const handleImageDrop = acceptedFiles => {\n    setImages(acceptedFiles);\n  };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append(\"post[title]\", title);\n  //   formData.append(\"post[content]\", content);\n\n  //   // Ensure the category ID is an integer\n  //   const categoryId = parseInt(category, 10);\n  //   formData.append(\"post[category_id]\", categoryId);\n\n  //   images.forEach((image) => formData.append(\"post[images][]\", image));\n\n  //   const getCategoryName = async (categoryId) => {\n  //     try {\n  //       const response = await axios.get(\n  //         `http://localhost:3001/categories/${categoryId}`\n  //       );\n  //       return response.data.name;\n  //     } catch (error) {\n  //       console.error(\"Error fetching category:\", error);\n  //       return \"Unknown Category\";\n  //     }\n  //   };\n\n  //   // Retrieve the user's authentication token from local storage\n  //   const authToken = localStorage.getItem(\"authToken\");\n  //   console.log(\"Auth Token:\", authToken);\n\n  //   const headers = {\n  //     Authorization: `Bearer ${authToken}`,\n  //     \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n  //   };\n\n  //   try {\n  //     const response = await axios.post(\n  //       \"http://localhost:3001/posts\",\n  //       formData,\n  //       { headers }\n  //     );\n  //     console.log(\"Post created:\", response.data);\n  //     // Reset form fields\n  //     setTitle(\"\");\n  //     setContent(\"\");\n  //     setCategory(\"\");\n  //     setImages([]);\n  //   } catch (error) {\n  //     console.error(\"Error creating post:\", error);\n  //   }\n  // };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n    images.forEach(image => formData.append(\"post[images][]\", image));\n    try {\n      const authToken = localStorage.getItem(\"authToken\");\n      const headers = {\n        Authorization: `Bearer ${authToken}`,\n        \"Content-Type\": \"multipart/form-data\"\n      };\n      const response = await axios.post(\"http://localhost:3001/posts\", formData, {\n        headers\n      });\n      console.log(\"Post created:\", response.data);\n\n      // Reset form fields after successful post creation\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n\n      // Refresh the page\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  // const handleDeletePost = (userId, postId) => {\n  //   console.log(\"Deleting post with userId:\", userId, \"and postId:\", postId);\n\n  //   // Send a DELETE request to delete the post\n  //   axios\n  //     .delete(`http://localhost:3001/users/${userId}/posts/${postId}`)\n\n  //     .then((response) => {\n  //       // Handle success\n  //       console.log(\"Post deleted successfully\");\n  //       // You can perform additional actions here, like updating the UI\n  //     })\n  //     .catch((error) => {\n  //       // Handle error\n  //       console.error(\"Error deleting post:\", error);\n  //       // You can display an error message or handle the error in another way\n  //     });\n  // };\n  const handleDeletePost = (userId, postId) => {\n    console.log(\"Deleting post with userId:\", userId, \"and postId:\", postId);\n\n    // Send a DELETE request to delete the post\n    axios.delete(`http://localhost:3001/users/${userId}/posts/${postId}`).then(response => {\n      // Handle success\n      console.log(\"Post deleted successfully\");\n      // You can perform additional actions here, like updating the UI\n    }).catch(error => {\n      // Handle error\n      console.error(\"Error deleting post:\", error);\n      // You can display an error message or handle the error in another way\n    });\n  };\n\n  const toggleCreatePost = () => {\n    setShowCreatePost(!showCreatePost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showCreatePost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.id,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: handleImageDrop,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropzone\",\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag & drop images or click here to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fancy\",\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"top-key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bottom-key-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bottom-key-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), userPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No blogs, start your blogging journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // <div className=\"blog_card\">\n      //   <ul>\n      //     {userPosts.map((post, index) => (\n      //       <li key={post.id}>\n      //         <p className=\"post-number\">{index + 1}</p>\n      //         <h4 className=\"title\">{post.title}</h4>\n      //         <h4 className=\"title\">\n      //           Category: {getCategoryName(post.category_id)}\n      //         </h4>\n      //         <p className=\"likes\">Likes: {post.likes}</p>\n      //       </li>\n      //     ))}\n      //   </ul>\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"blog_card\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"post-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              children: [\"Category: \", getCategoryName(post.category_id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"likes\",\n              children: [\"Likes: \", post.likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn1\",\n              onClick: () => handleDeletePost(post.id),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 15 17.5\",\n                height: \"17.5\",\n                width: \"15\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                class: \"icon\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  transform: \"translate(-2.5 -1.25)\",\n                  d: \"M15,18.75H5A1.251,1.251,0,0,1,3.75,17.5V5H2.5V3.75h15V5H16.25V17.5A1.251,1.251,0,0,1,15,18.75ZM5,5V17.5H15V5Zm7.5,10H11.25V7.5H12.5V15ZM8.75,15H7.5V7.5H8.75V15ZM12.5,2.5h-5V1.25h5V2.5Z\",\n                  id: \"Fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCreatePost,\n      children: showCreatePost ? \"Hide Create Post\" : \"Show Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"MEad2X5AGdAWRjpY2+NFERhuX1g=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Dropzone","axios","jsxDEV","_jsxDEV","CreatePost","currentUser","_s","title","setTitle","content","setContent","category","setCategory","categories","setCategories","images","setImages","userPosts","setUserPosts","showCreatePost","setShowCreatePost","userId","user","id","forceUpdate","handleForceUpdate","current","getCategoryName","categoryId","find","cat","name","get","then","response","data","catch","error","console","authToken","localStorage","getItem","headers","Authorization","handleImageDrop","acceptedFiles","handleSubmit","event","preventDefault","formData","FormData","append","parseInt","forEach","image","post","log","window","location","reload","handleDeletePost","postId","delete","toggleCreatePost","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","disabled","map","onDrop","getRootProps","getInputProps","href","length","index","category_id","likes","class","onClick","viewBox","height","width","xmlns","transform","d","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\n\nconst CreatePost = ({ currentUser }) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [showCreatePost, setShowCreatePost] = useState(true);\n  const userId = user.id; \n\n  const forceUpdate = useRef(0);\n\n  const handleForceUpdate = () => {\n    forceUpdate.current += 1;\n  };\n\n  const getCategoryName = (categoryId) => {\n    const category = categories.find((cat) => cat.id === categoryId);\n    return category ? category.name : \"Unknown Category\";\n  };\n\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios\n      .get(\"http://localhost:3001/categories\")\n      .then((response) => {\n        setCategories(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n      });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios\n        .get(`http://localhost:3001/users/${userId}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then((response) => {\n          setUserPosts(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching user posts:\", error);\n        });\n    }\n    handleForceUpdate();\n  }, [currentUser]);\n\n  const handleImageDrop = (acceptedFiles) => {\n    setImages(acceptedFiles);\n  };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append(\"post[title]\", title);\n  //   formData.append(\"post[content]\", content);\n\n  //   // Ensure the category ID is an integer\n  //   const categoryId = parseInt(category, 10);\n  //   formData.append(\"post[category_id]\", categoryId);\n\n  //   images.forEach((image) => formData.append(\"post[images][]\", image));\n\n  //   const getCategoryName = async (categoryId) => {\n  //     try {\n  //       const response = await axios.get(\n  //         `http://localhost:3001/categories/${categoryId}`\n  //       );\n  //       return response.data.name;\n  //     } catch (error) {\n  //       console.error(\"Error fetching category:\", error);\n  //       return \"Unknown Category\";\n  //     }\n  //   };\n\n  //   // Retrieve the user's authentication token from local storage\n  //   const authToken = localStorage.getItem(\"authToken\");\n  //   console.log(\"Auth Token:\", authToken);\n\n  //   const headers = {\n  //     Authorization: `Bearer ${authToken}`,\n  //     \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n  //   };\n\n  //   try {\n  //     const response = await axios.post(\n  //       \"http://localhost:3001/posts\",\n  //       formData,\n  //       { headers }\n  //     );\n  //     console.log(\"Post created:\", response.data);\n  //     // Reset form fields\n  //     setTitle(\"\");\n  //     setContent(\"\");\n  //     setCategory(\"\");\n  //     setImages([]);\n  //   } catch (error) {\n  //     console.error(\"Error creating post:\", error);\n  //   }\n  // };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n    images.forEach((image) => formData.append(\"post[images][]\", image));\n\n    try {\n      const authToken = localStorage.getItem(\"authToken\");\n      const headers = {\n        Authorization: `Bearer ${authToken}`,\n        \"Content-Type\": \"multipart/form-data\",\n      };\n\n      const response = await axios.post(\n        \"http://localhost:3001/posts\",\n        formData,\n        { headers }\n      );\n\n      console.log(\"Post created:\", response.data);\n\n      // Reset form fields after successful post creation\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n\n      // Refresh the page\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  // const handleDeletePost = (userId, postId) => {\n  //   console.log(\"Deleting post with userId:\", userId, \"and postId:\", postId);\n  \n  //   // Send a DELETE request to delete the post\n  //   axios\n  //     .delete(`http://localhost:3001/users/${userId}/posts/${postId}`)\n      \n  //     .then((response) => {\n  //       // Handle success\n  //       console.log(\"Post deleted successfully\");\n  //       // You can perform additional actions here, like updating the UI\n  //     })\n  //     .catch((error) => {\n  //       // Handle error\n  //       console.error(\"Error deleting post:\", error);\n  //       // You can display an error message or handle the error in another way\n  //     });\n  // };\n  const handleDeletePost = (userId, postId) => {\n    console.log(\"Deleting post with userId:\", userId, \"and postId:\", postId);\n  \n    // Send a DELETE request to delete the post\n    axios\n      .delete(`http://localhost:3001/users/${userId}/posts/${postId}`)\n      .then((response) => {\n        // Handle success\n        console.log(\"Post deleted successfully\");\n        // You can perform additional actions here, like updating the UI\n      })\n      .catch((error) => {\n        // Handle error\n        console.error(\"Error deleting post:\", error);\n        // You can display an error message or handle the error in another way\n      });\n  };\n  \n  \n\n  const toggleCreatePost = () => {\n    setShowCreatePost(!showCreatePost);\n  };\n\n  return (\n    <div>\n      {showCreatePost && (\n        <div className=\"create-post\">\n          <h2>Create a New Post</h2>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n            <textarea\n              placeholder=\"Content\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              required\n            />\n            <select\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n              required\n            >\n              <option value=\"\" disabled>\n                Select a category\n              </option>\n              {categories.map((category) => (\n                <option key={category.id} value={category.id}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n            <Dropzone onDrop={handleImageDrop}>\n              {({ getRootProps, getInputProps }) => (\n                <div className=\"dropzone\" {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <p>Drag & drop images or click here to select files</p>\n                </div>\n              )}\n            </Dropzone>\n            <br />\n            <button className=\"fancy\" href=\"#\">\n              <span className=\"top-key\"></span>\n              <span className=\"text\">Create Post</span>\n              <span className=\"bottom-key-1\"></span>\n              <span className=\"bottom-key-2\"></span>\n            </button>\n          </form>\n        </div>\n      )}\n\n      <div className=\"posts\">\n        <h3>Your Posts</h3>\n        {userPosts.length === 0 ? (\n          <p>No blogs, start your blogging journey</p>\n        ) : (\n          // <div className=\"blog_card\">\n          //   <ul>\n          //     {userPosts.map((post, index) => (\n          //       <li key={post.id}>\n          //         <p className=\"post-number\">{index + 1}</p>\n          //         <h4 className=\"title\">{post.title}</h4>\n          //         <h4 className=\"title\">\n          //           Category: {getCategoryName(post.category_id)}\n          //         </h4>\n          //         <p className=\"likes\">Likes: {post.likes}</p>\n          //       </li>\n          //     ))}\n          //   </ul>\n          // </div>\n          <div className=\"blog_card\">\n            <ul>\n              {userPosts.map((post, index) => (\n                <li key={post.id}>\n                  <p className=\"post-number\">{index + 1}</p>\n                  <h4 className=\"title\">{post.title}</h4>\n                  <h4 className=\"title\">\n                    Category: {getCategoryName(post.category_id)}\n                  </h4>\n                  <p className=\"likes\">Likes: {post.likes}</p>\n                  {/* <button\n                    onClick={() => handleDeletePost(post.id)}\n                    className=\"delete-button\"\n                  >\n                    Delete\n                  </button> */}\n                  <button class=\"btn1\"\n                  onClick={() => handleDeletePost(post.id)}\n                  \n                  >\n                    <svg\n                      viewBox=\"0 0 15 17.5\"\n                      height=\"17.5\"\n                      width=\"15\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      class=\"icon\"\n                    >\n                      <path\n                        transform=\"translate(-2.5 -1.25)\"\n                        d=\"M15,18.75H5A1.251,1.251,0,0,1,3.75,17.5V5H2.5V3.75h15V5H16.25V17.5A1.251,1.251,0,0,1,15,18.75ZM5,5V17.5H15V5Zm7.5,10H11.25V7.5H12.5V15ZM8.75,15H7.5V7.5H8.75V15ZM12.5,2.5h-5V1.25h5V2.5Z\"\n                        id=\"Fill\"\n                      ></path>\n                    </svg>\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      <button onClick={toggleCreatePost}>\n        {showCreatePost ? \"Hide Create Post\" : \"Show Create Post\"}\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePost;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}