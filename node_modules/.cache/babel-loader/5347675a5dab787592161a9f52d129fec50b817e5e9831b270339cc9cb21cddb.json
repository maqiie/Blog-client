{"ast":null,"code":"// AuthComponent.js\n\n// import React, { useState } from 'react';\n// import Login from './login';\n// import Signup from './signup';\n// import './AuthComponent.css'; // Create this CSS file for styling\n\n// const AuthComponent = () => {\n//   const [showLogin, setShowLogin] = useState(true);\n\n//   const handleToggleForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <div className={`auth-form-container ${showLogin ? 'login' : 'signup'}`}>\n//         {showLogin ? <Login onToggleForm={handleToggleForm} /> : <Signup onToggleForm={handleToggleForm} />}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AuthComponent;\n// import React from 'react';\n//  import { useAuth } from './AuthContext'; // Import the useAuth hook\n// import Login from './login';\n//   import Signup from './signup';\n\n// const AuthComponent = () => {\n//   const { isLoggedIn, login, logout } = useAuth(); // Use the useAuth hook to access authentication state and functions\n\n//   const toggleForm = () => {\n//     // Your toggle form logic\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       {isLoggedIn ? (\n//         <div>\n//           {/* Display content for authenticated users */}\n//           <p>Welcome, you are logged in!</p>\n//           <button onClick={logout}>Logout</button>\n//         </div>\n//       ) : (\n//         <div className=\"auth-form-container\">\n//           {/* Display login or signup forms based on isLoggedIn state */}\n//           {showLogin ? (\n//             <Login onToggleForm={toggleForm} />\n//           ) : (\n//             <Signup onToggleForm={toggleForm} />\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AuthComponent;","map":{"version":3,"names":[],"sources":["/home/markpaul/projects/Blog/client/src/components/register/AuthComponent.js"],"sourcesContent":["// AuthComponent.js\n\n// import React, { useState } from 'react';\n// import Login from './login';\n// import Signup from './signup';\n// import './AuthComponent.css'; // Create this CSS file for styling\n\n// const AuthComponent = () => {\n//   const [showLogin, setShowLogin] = useState(true);\n\n//   const handleToggleForm = () => {\n//     setShowLogin(!showLogin);\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <div className={`auth-form-container ${showLogin ? 'login' : 'signup'}`}>\n//         {showLogin ? <Login onToggleForm={handleToggleForm} /> : <Signup onToggleForm={handleToggleForm} />}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AuthComponent;\n// import React from 'react';\n//  import { useAuth } from './AuthContext'; // Import the useAuth hook\n// import Login from './login';\n//   import Signup from './signup';\n\n// const AuthComponent = () => {\n//   const { isLoggedIn, login, logout } = useAuth(); // Use the useAuth hook to access authentication state and functions\n\n//   const toggleForm = () => {\n//     // Your toggle form logic\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       {isLoggedIn ? (\n//         <div>\n//           {/* Display content for authenticated users */}\n//           <p>Welcome, you are logged in!</p>\n//           <button onClick={logout}>Logout</button>\n//         </div>\n//       ) : (\n//         <div className=\"auth-form-container\">\n//           {/* Display login or signup forms based on isLoggedIn state */}\n//           {showLogin ? (\n//             <Login onToggleForm={toggleForm} />\n//           ) : (\n//             <Signup onToggleForm={toggleForm} />\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AuthComponent;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}