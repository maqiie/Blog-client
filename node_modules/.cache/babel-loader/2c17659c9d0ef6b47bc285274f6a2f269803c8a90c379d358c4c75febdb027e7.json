{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n//   }, []);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem('authToken');\n//     console.log('Auth Token:', authToken); // Add this line to log the authToken\n\n//     const headers = {\n//       'Authorization': `Bearer ${authToken}`,\n//       'Content-Type': 'multipart/form-data', // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Content\"\n//           value={content}\n//           onChange={(e) => setContent(e.target.value)}\n//           required\n//         />\n//         <select\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           {categories.map((category) => (\n//             <option key={category.id} value={category.id}>\n//               {category.name}\n//             </option>\n//           ))}\n//         </select>\n//         <Dropzone onDrop={handleImageDrop}>\n//           {({ getRootProps, getInputProps }) => (\n//             <div className=\"dropzone\" {...getRootProps()}>\n//               <input {...getInputProps()} />\n//               <p>Drag & drop images or click here to select files</p>\n//             </div>\n//           )}\n//         </Dropzone>\n//         <br />\n//         <button class=\"fancy\" href=\"#\">\n//           <span class=\"top-key\"></span>\n//           <span class=\"text\">Create Post</span>\n//           <span class=\"bottom-key-1\"></span>\n//           <span class=\"bottom-key-2\"></span>\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreatePost;\n// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n//   const [userPosts, setUserPosts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n\n//     // Fetch the logged-in user's posts from the backend\n//     if (currentUser) {\n//       const authToken = localStorage.getItem(\"authToken\");\n//       const userId = currentUser.id; // Check if currentUser is defined\n\n//       axios\n//         .get(`http://localhost:3001/users/${userId}/posts`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         })\n//         .then((response) => {\n//           setUserPosts(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching user posts:\", error);\n//         });\n//     }\n//   }, [currentUser]);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem(\"authToken\");\n//     console.log(\"Auth Token:\", authToken);\n\n//     const headers = {\n//       Authorization: `Bearer ${authToken}`,\n//       \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n// <form onSubmit={handleSubmit}>\n//   <input\n//     type=\"text\"\n//     placeholder=\"Title\"\n//     value={title}\n//     onChange={(e) => setTitle(e.target.value)}\n//     required\n//   />\n//   <textarea\n//     placeholder=\"Content\"\n//     value={content}\n//     onChange={(e) => setContent(e.target.value)}\n//     required\n//   />\n//   <select\n//     value={category}\n//     onChange={(e) => setCategory(e.target.value)}\n//     required\n//   >\n//     <option value=\"\" disabled>\n//       Select a category\n//     </option>\n//     {categories.map((category) => (\n//       <option key={category.id} value={category.id}>\n//         {category.name}\n//       </option>\n//     ))}\n//   </select>\n//   <Dropzone onDrop={handleImageDrop}>\n//     {({ getRootProps, getInputProps }) => (\n//       <div className=\"dropzone\" {...getRootProps()}>\n//         <input {...getInputProps()} />\n//         <p>Drag & drop images or click here to select files</p>\n//       </div>\n//     )}\n//   </Dropzone>\n//   <br />\n//   <button className=\"fancy\" href=\"#\">\n//     <span className=\"top-key\"></span>\n//     <span className=\"text\">Create Post</span>\n//     <span className=\"bottom-key-1\"></span>\n//     <span className=\"bottom-key-2\"></span>\n//   </button>\n// </form>\n//     </div>\n//   );\n//   <div className=\"posts\">\n//     <h3>Your Posts</h3>\n//     {userPosts.length === 0 ? (\n//       <p>No blogs, start your blogging journey</p>\n//     ) : (\n//       <div className=\"blog-cards-container\">\n//       <ul>\n//         {userPosts.map((post) => (\n//           <li key={post.id}>\n//             <h4>{post.title}</h4>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   )}\n// </div>\n\n// };\n\n// export default CreatePost;\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  currentUser\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [showCreatePost, setShowCreatePost] = useState(true);\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios.get(\"http://localhost:3001/categories\").then(response => {\n      setCategories(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n    });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios.get(`http://localhost:3001/users/${userId}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(response => {\n        setUserPosts(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n      });\n    }\n  }, [currentUser]);\n  const handleImageDrop = acceptedFiles => {\n    setImages(acceptedFiles);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n\n    // Ensure the category ID is an integer\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n    images.forEach(image => formData.append(\"post[images][]\", image));\n\n    // Retrieve the user's authentication token from local storage\n    const authToken = localStorage.getItem(\"authToken\");\n    console.log(\"Auth Token:\", authToken);\n    const headers = {\n      Authorization: `Bearer ${authToken}`,\n      \"Content-Type\": \"multipart/form-data\" // Set the content type for file uploads\n    };\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts\", formData, {\n        headers\n      });\n      console.log(\"Post created:\", response.data);\n      // Reset form fields\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  const toggleCreatePost = () => {\n    setShowCreatePost(!showCreatePost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showCreatePost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 11\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.id,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: handleImageDrop,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropzone\",\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag & drop images or click here to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fancy\",\n          href: \"#\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"top-key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bottom-key-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bottom-key-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), userPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No blogs, start your blogging journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog_card\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCreatePost,\n      children: showCreatePost ? \"Hide Create Post\" : \"Show Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"vJgREg7lXkID1ID0KjCUx8UnOBk=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useEffect","Dropzone","axios","jsxDEV","_jsxDEV","CreatePost","currentUser","_s","title","setTitle","content","setContent","category","setCategory","categories","setCategories","images","setImages","userPosts","setUserPosts","showCreatePost","setShowCreatePost","get","then","response","data","catch","error","console","authToken","localStorage","getItem","userId","id","headers","Authorization","handleImageDrop","acceptedFiles","handleSubmit","event","preventDefault","formData","FormData","append","categoryId","parseInt","forEach","image","log","post","toggleCreatePost","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","disabled","map","name","onDrop","getRootProps","getInputProps","href","length","onClick","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n//   }, []);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem('authToken');\n//     console.log('Auth Token:', authToken); // Add this line to log the authToken\n\n//     const headers = {\n//       'Authorization': `Bearer ${authToken}`,\n//       'Content-Type': 'multipart/form-data', // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Content\"\n//           value={content}\n//           onChange={(e) => setContent(e.target.value)}\n//           required\n//         />\n//         <select\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           {categories.map((category) => (\n//             <option key={category.id} value={category.id}>\n//               {category.name}\n//             </option>\n//           ))}\n//         </select>\n//         <Dropzone onDrop={handleImageDrop}>\n//           {({ getRootProps, getInputProps }) => (\n//             <div className=\"dropzone\" {...getRootProps()}>\n//               <input {...getInputProps()} />\n//               <p>Drag & drop images or click here to select files</p>\n//             </div>\n//           )}\n//         </Dropzone>\n//         <br />\n//         <button class=\"fancy\" href=\"#\">\n//           <span class=\"top-key\"></span>\n//           <span class=\"text\">Create Post</span>\n//           <span class=\"bottom-key-1\"></span>\n//           <span class=\"bottom-key-2\"></span>\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreatePost;\n// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n//   const [userPosts, setUserPosts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n\n//     // Fetch the logged-in user's posts from the backend\n//     if (currentUser) {\n//       const authToken = localStorage.getItem(\"authToken\");\n//       const userId = currentUser.id; // Check if currentUser is defined\n\n//       axios\n//         .get(`http://localhost:3001/users/${userId}/posts`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         })\n//         .then((response) => {\n//           setUserPosts(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching user posts:\", error);\n//         });\n//     }\n//   }, [currentUser]);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem(\"authToken\");\n//     console.log(\"Auth Token:\", authToken);\n\n//     const headers = {\n//       Authorization: `Bearer ${authToken}`,\n//       \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n      // <form onSubmit={handleSubmit}>\n      //   <input\n      //     type=\"text\"\n      //     placeholder=\"Title\"\n      //     value={title}\n      //     onChange={(e) => setTitle(e.target.value)}\n      //     required\n      //   />\n      //   <textarea\n      //     placeholder=\"Content\"\n      //     value={content}\n      //     onChange={(e) => setContent(e.target.value)}\n      //     required\n      //   />\n      //   <select\n      //     value={category}\n      //     onChange={(e) => setCategory(e.target.value)}\n      //     required\n      //   >\n      //     <option value=\"\" disabled>\n      //       Select a category\n      //     </option>\n      //     {categories.map((category) => (\n      //       <option key={category.id} value={category.id}>\n      //         {category.name}\n      //       </option>\n      //     ))}\n      //   </select>\n      //   <Dropzone onDrop={handleImageDrop}>\n      //     {({ getRootProps, getInputProps }) => (\n      //       <div className=\"dropzone\" {...getRootProps()}>\n      //         <input {...getInputProps()} />\n      //         <p>Drag & drop images or click here to select files</p>\n      //       </div>\n      //     )}\n      //   </Dropzone>\n      //   <br />\n      //   <button className=\"fancy\" href=\"#\">\n      //     <span className=\"top-key\"></span>\n      //     <span className=\"text\">Create Post</span>\n      //     <span className=\"bottom-key-1\"></span>\n      //     <span className=\"bottom-key-2\"></span>\n      //   </button>\n      // </form>\n//     </div>\n//   );\n//   <div className=\"posts\">\n//     <h3>Your Posts</h3>\n//     {userPosts.length === 0 ? (\n//       <p>No blogs, start your blogging journey</p>\n//     ) : (\n//       <div className=\"blog-cards-container\">\n//       <ul>\n//         {userPosts.map((post) => (\n//           <li key={post.id}>\n//             <h4>{post.title}</h4>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   )}\n// </div>\n\n// };\n\n// export default CreatePost;\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\n\nconst CreatePost = ({ currentUser }) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [showCreatePost, setShowCreatePost] = useState(true);\n\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios\n      .get(\"http://localhost:3001/categories\")\n      .then((response) => {\n        setCategories(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n      });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios\n        .get(`http://localhost:3001/users/${userId}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then((response) => {\n          setUserPosts(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching user posts:\", error);\n        });\n    }\n  }, [currentUser]);\n\n  const handleImageDrop = (acceptedFiles) => {\n    setImages(acceptedFiles);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n\n    // Ensure the category ID is an integer\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n\n    images.forEach((image) => formData.append(\"post[images][]\", image));\n\n    // Retrieve the user's authentication token from local storage\n    const authToken = localStorage.getItem(\"authToken\");\n    console.log(\"Auth Token:\", authToken);\n\n    const headers = {\n      Authorization: `Bearer ${authToken}`,\n      \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/posts\",\n        formData,\n        { headers }\n      );\n      console.log(\"Post created:\", response.data);\n      // Reset form fields\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  const toggleCreatePost = () => {\n    setShowCreatePost(!showCreatePost);\n  };\n\n  return (\n    <div>\n      {showCreatePost && (\n        <div className=\"create-post\">\n          <h2>Create a New Post</h2>\n          <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          required\n        />\n        <select\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n          required\n        >\n          <option value=\"\" disabled>\n            Select a category\n          </option>\n          {categories.map((category) => (\n            <option key={category.id} value={category.id}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n        <Dropzone onDrop={handleImageDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <div className=\"dropzone\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <p>Drag & drop images or click here to select files</p>\n            </div>\n          )}\n        </Dropzone>\n        <br />\n        <button className=\"fancy\" href=\"#\">\n          <span className=\"top-key\"></span>\n          <span className=\"text\">Create Post</span>\n          <span className=\"bottom-key-1\"></span>\n          <span className=\"bottom-key-2\"></span>\n        </button>\n      </form>\n        </div>\n      )}\n\n      <div className=\"posts\">\n        <h3>Your Posts</h3>\n        {userPosts.length === 0 ? (\n          <p>No blogs, start your blogging journey</p>\n        ) : (\n         <div className=\"blog_card\">\n            <ul>\n              {userPosts.map((post) => (\n                <li key={post.id}>\n                  <h4 className=\"title\">{post.title}</h4>\n                </li>\n              ))}\n            </ul>\n          </div> \n        )}\n      </div>\n\n      <button onClick={toggleCreatePost}>\n        {showCreatePost ? \"Hide Create Post\" : \"Show Create Post\"}\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePost;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}