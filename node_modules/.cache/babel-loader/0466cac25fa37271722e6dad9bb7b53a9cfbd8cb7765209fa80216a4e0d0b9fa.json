{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog/client/src/components/register/login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [rememberMe, setRememberMe] = useState(false); // Added state for \"Remember me\"\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n//         email,\n//         password,\n//         remember_me: rememberMe, // Send \"Remember me\" value in the request\n//       });\n\n//       if (response.status === 200) {\n//         // Login successful, store the token in local storage\n//         const authToken = response.headers[\"access-token\"];\n//         const client = response.headers[\"client\"];\n//         const uid = response.headers[\"uid\"];\n\n//         localStorage.setItem(\"authToken\", authToken);\n//         localStorage.setItem(\"client\", client);\n//         localStorage.setItem(\"uid\", uid);\n\n//         // Check if the token is stored\n//         console.log(\"Login successful\");\n//         console.log(\"Stored authToken:\", authToken);\n//         console.log(\"Stored client:\", client);\n//         console.log(\"Stored uid:\", uid);\n\n//         // You can handle redirection or other actions here\n//       } else {\n//         // Handle login error\n//         console.log(\"Login failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in:\", error);\n//     }\n//   };\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from React Router\n\n// const Login = ({ onToggleForm }) => {\n//   const navigate = useNavigate(); // Initialize the navigate function\n\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [rememberMe, setRememberMe] = useState(false);\n\n//   useEffect(() => {\n//     // Check for login state in local storage when the component mounts\n//     const authToken = localStorage.getItem(\"authToken\");\n//     if (authToken) {\n//       // If the user is already logged in, navigate to the desired route\n//       navigate(\"/createpost\"); // Change \"/dashboard\" to the route you want to navigate to\n//     }\n//   }, [navigate]);\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n//         email,\n//         password,\n//         remember_me: rememberMe,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers[\"access-token\"];\n//         const client = response.headers[\"client\"];\n//         const uid = response.headers[\"uid\"];\n\n//         localStorage.setItem(\"authToken\", authToken);\n//         localStorage.setItem(\"client\", client);\n//         localStorage.setItem(\"uid\", uid);\n\n//         console.log(\"Login successful\");\n//         console.log(\"Stored authToken:\", authToken);\n//         console.log(\"Stored client:\", client);\n//         console.log(\"Stored uid:\", uid);\n\n//         // Navigate to the desired route after a successful login\n//         navigate(\"/createpost\"); // Change \"/dashboard\" to the route you want to navigate to\n//       } else {\n//         console.log(\"Login failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in:\", error);\n//     }\n//   };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onToggleForm\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n\n  // Initialize isLoggedIn state by checking localStorage\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"authToken\"));\n  useEffect(() => {\n    // Check for login state in local storage when the component mounts\n    const authToken = localStorage.getItem(\"authToken\");\n    if (authToken) {\n      setIsLoggedIn(true); // User is logged in\n      // Redirect to the desired route for logged-in users\n      // navigate(\"/createpost\"); // Change \"/createpost\" to your desired route\n    } else {\n      setIsLoggedIn(false); // User is not logged in\n    }\n  }, [navigate]);\n\n  //   const handleLogin = async (e) => {\n  //     e.preventDefault();\n\n  //     try {\n  //       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n  //         email,\n  //         password,\n  //         remember_me: rememberMe,\n  //       });\n  // // Inside handleLogin function\n  // const authToken = response.headers[\"Authorization\"].split(\"Bearer \")[1]; // Extract Bearer token\n  // localStorage.setItem(\"authToken\", authToken); // Store Bearer token in local storage\n\n  //       if (response.status === 200) {\n  //         const authToken = response.headers[\"access-token\"];\n  //         const client = response.headers[\"client\"];\n  //         const uid = response.headers[\"uid\"];\n\n  //         localStorage.setItem(\"authToken\", authToken);\n  //         localStorage.setItem(\"client\", client);\n  //         localStorage.setItem(\"uid\", uid);\n\n  //         console.log(\"Login successful\");\n  //         console.log(\"Stored authToken:\", authToken);\n  //         console.log(\"Stored client:\", client);\n  //         console.log(\"Stored uid:\", uid);\n\n  //         setIsLoggedIn(true); // User is now logged in\n\n  //         // Navigate to the desired route after a successful login\n  //         navigate(\"/createpost\"); // Change \"/createpost\" to your desired route\n  //       } else {\n  //         console.log(\"Login failed\");\n  //       }\n  //     } catch (error) {\n  //       console.error(\"Error logging in:\", error);\n  //     }\n  //   };\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n        email,\n        password,\n        remember_me: rememberMe\n      });\n      if (response.status === 200) {\n        const authToken = response.headers[\"Authorization\"];\n        const client = response.headers[\"client\"];\n        const uid = response.headers[\"uid\"];\n\n        // Check if authToken is present and starts with \"Bearer \"\n        if (authToken && authToken.startsWith(\"Bearer \")) {\n          // Extract and store the Bearer token in local storage\n          const token = authToken.split(\"Bearer \")[1];\n          localStorage.setItem(\"authToken\", token);\n        } else {\n          console.log(\"Invalid Authorization header format.\");\n          return; // Handle the error appropriately\n        }\n\n        localStorage.setItem(\"client\", client);\n        localStorage.setItem(\"uid\", uid);\n        console.log(\"Login successful\");\n        console.log(\"Stored authToken:\", authToken);\n        console.log(\"Stored client:\", client);\n        console.log(\"Stored uid:\", uid);\n        setIsLoggedIn(true); // User is now logged in\n\n        // Navigate to the desired route after a successful login\n        navigate(\"/createpost\"); // Change \"/createpost\" to your desired route\n      } else {\n        console.log(\"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form bg-white p-6 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4 text-blue-600\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-600\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-600\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: rememberMe,\n            onChange: () => setRememberMe(!rememberMe),\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), \"Remember me\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onToggleForm,\n        className: \"text-blue-500 hover:underline focus:outline-none\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"gygZXbNn40K8gOuMXxLfffetYbk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Login","onToggleForm","_s","navigate","email","setEmail","password","setPassword","rememberMe","setRememberMe","isLoggedIn","setIsLoggedIn","localStorage","getItem","authToken","handleLogin","e","preventDefault","response","post","remember_me","status","headers","client","uid","startsWith","token","split","setItem","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","checked","onClick","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/register/login.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Login = ({ onToggleForm }) => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [rememberMe, setRememberMe] = useState(false); // Added state for \"Remember me\"\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n//         email,\n//         password,\n//         remember_me: rememberMe, // Send \"Remember me\" value in the request\n//       });\n\n//       if (response.status === 200) {\n//         // Login successful, store the token in local storage\n//         const authToken = response.headers[\"access-token\"];\n//         const client = response.headers[\"client\"];\n//         const uid = response.headers[\"uid\"];\n\n//         localStorage.setItem(\"authToken\", authToken);\n//         localStorage.setItem(\"client\", client);\n//         localStorage.setItem(\"uid\", uid);\n\n//         // Check if the token is stored\n//         console.log(\"Login successful\");\n//         console.log(\"Stored authToken:\", authToken);\n//         console.log(\"Stored client:\", client);\n//         console.log(\"Stored uid:\", uid);\n\n//         // You can handle redirection or other actions here\n//       } else {\n//         // Handle login error\n//         console.log(\"Login failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in:\", error);\n//     }\n//   };\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from React Router\n\n// const Login = ({ onToggleForm }) => {\n//   const navigate = useNavigate(); // Initialize the navigate function\n\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [rememberMe, setRememberMe] = useState(false);\n\n//   useEffect(() => {\n//     // Check for login state in local storage when the component mounts\n//     const authToken = localStorage.getItem(\"authToken\");\n//     if (authToken) {\n//       // If the user is already logged in, navigate to the desired route\n//       navigate(\"/createpost\"); // Change \"/dashboard\" to the route you want to navigate to\n//     }\n//   }, [navigate]);\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n//         email,\n//         password,\n//         remember_me: rememberMe,\n//       });\n\n//       if (response.status === 200) {\n//         const authToken = response.headers[\"access-token\"];\n//         const client = response.headers[\"client\"];\n//         const uid = response.headers[\"uid\"];\n\n//         localStorage.setItem(\"authToken\", authToken);\n//         localStorage.setItem(\"client\", client);\n//         localStorage.setItem(\"uid\", uid);\n\n//         console.log(\"Login successful\");\n//         console.log(\"Stored authToken:\", authToken);\n//         console.log(\"Stored client:\", client);\n//         console.log(\"Stored uid:\", uid);\n\n//         // Navigate to the desired route after a successful login\n//         navigate(\"/createpost\"); // Change \"/dashboard\" to the route you want to navigate to\n//       } else {\n//         console.log(\"Login failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in:\", error);\n//     }\n//   };\nconst Login = ({ onToggleForm }) => {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n\n  // Initialize isLoggedIn state by checking localStorage\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"authToken\"));\n\n  useEffect(() => {\n    // Check for login state in local storage when the component mounts\n    const authToken = localStorage.getItem(\"authToken\");\n    if (authToken) {\n      setIsLoggedIn(true); // User is logged in\n      // Redirect to the desired route for logged-in users\n      // navigate(\"/createpost\"); // Change \"/createpost\" to your desired route\n    } else {\n      setIsLoggedIn(false); // User is not logged in\n    }\n  }, [navigate]);\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n//         email,\n//         password,\n//         remember_me: rememberMe,\n//       });\n// // Inside handleLogin function\n// const authToken = response.headers[\"Authorization\"].split(\"Bearer \")[1]; // Extract Bearer token\n// localStorage.setItem(\"authToken\", authToken); // Store Bearer token in local storage\n\n//       if (response.status === 200) {\n//         const authToken = response.headers[\"access-token\"];\n//         const client = response.headers[\"client\"];\n//         const uid = response.headers[\"uid\"];\n\n//         localStorage.setItem(\"authToken\", authToken);\n//         localStorage.setItem(\"client\", client);\n//         localStorage.setItem(\"uid\", uid);\n\n//         console.log(\"Login successful\");\n//         console.log(\"Stored authToken:\", authToken);\n//         console.log(\"Stored client:\", client);\n//         console.log(\"Stored uid:\", uid);\n\n//         setIsLoggedIn(true); // User is now logged in\n\n//         // Navigate to the desired route after a successful login\n//         navigate(\"/createpost\"); // Change \"/createpost\" to your desired route\n//       } else {\n//         console.log(\"Login failed\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in:\", error);\n//     }\n//   };\nconst handleLogin = async (e) => {\n  e.preventDefault();\n\n  try {\n    const response = await axios.post(\"http://localhost:3001/auth/sign_in\", {\n      email,\n      password,\n      remember_me: rememberMe,\n    });\n\n    if (response.status === 200) {\n      const authToken = response.headers[\"Authorization\"];\n      const client = response.headers[\"client\"];\n      const uid = response.headers[\"uid\"];\n\n      // Check if authToken is present and starts with \"Bearer \"\n      if (authToken && authToken.startsWith(\"Bearer \")) {\n        // Extract and store the Bearer token in local storage\n        const token = authToken.split(\"Bearer \")[1];\n        localStorage.setItem(\"authToken\", token);\n      } else {\n        console.log(\"Invalid Authorization header format.\");\n        return; // Handle the error appropriately\n      }\n\n      localStorage.setItem(\"client\", client);\n      localStorage.setItem(\"uid\", uid);\n\n      console.log(\"Login successful\");\n      console.log(\"Stored authToken:\", authToken);\n      console.log(\"Stored client:\", client);\n      console.log(\"Stored uid:\", uid);\n\n      setIsLoggedIn(true); // User is now logged in\n\n      // Navigate to the desired route after a successful login\n      navigate(\"/createpost\"); // Change \"/createpost\" to your desired route\n    } else {\n      console.log(\"Login failed\");\n    }\n  } catch (error) {\n    console.error(\"Error logging in:\", error);\n  }\n};\n\n  return (\n    <div className=\"auth-form bg-white p-6 rounded shadow\">\n      <h2 className=\"text-2xl font-semibold mb-4 text-blue-600\">Login</h2>\n      <form onSubmit={handleLogin}>\n        <div className=\"mb-3\">\n          <label className=\"block text-sm font-medium text-gray-600\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"block text-sm font-medium text-gray-600\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"mt-1 p-2 border rounded border-solid border-blue-400 w-full focus:border-blue-400 focus:outline-none\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"block text-sm font-medium text-gray-600\">\n            <input\n              type=\"checkbox\"\n              checked={rememberMe}\n              onChange={() => setRememberMe(!rememberMe)}\n              className=\"mr-1\"\n            />\n            Remember me\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\"\n        >\n          Login\n        </button>\n      </form>\n      <p className=\"mt-4\">\n        Don't have an account?{\" \"}\n        <button\n          onClick={onToggleForm}\n          className=\"text-blue-500 hover:underline focus:outline-none\"\n        >\n          Sign Up\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}