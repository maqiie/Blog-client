{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nconst Signup = ({\n  onToggleForm\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleSignup = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      console.log(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth\", {\n        user: {\n          // Wrap the parameters in a 'user' object\n          name,\n          email,\n          password,\n          password_confirmation: confirmPassword\n          // Other necessary fields like nickname and image\n        }\n      });\n\n      if (response.status === 200) {\n        // Signup successful, you can handle redirection or other actions here\n        console.log(\"Signup successful\");\n      } else {\n        // Handle signup error\n        console.log(\"Signup failed\");\n      }\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n    }\n  };\n\n  //   return (\n  //     <div className=\"auth-form bg-white p-6 rounded shadow\">\n  //       <h2 className=\"text-2xl font-semibold mb-4 text-green-600\">Sign Up</h2>\n  //       <form onSubmit={handleSignup}>\n  //         <div className=\"mb-3\">\n  //           <label className=\"block text-sm font-medium text-gray-600\">\n  //             Name\n  //           </label>\n  //           <input\n  //             type=\"text\"\n  //             value={name}\n  //             onChange={(e) => setName(e.target.value)}\n  //             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n  //             required\n  //           />\n  //         </div>\n  //         <div className=\"mb-3\">\n  //           <label className=\"block text-sm font-medium text-gray-600\">\n  //             Email\n  //           </label>\n  //           <input\n  //             type=\"email\"\n  //             value={email}\n  //             onChange={(e) => setEmail(e.target.value)}\n  //             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n  //             required\n  //           />\n  //         </div>\n  //         <div className=\"mb-3\">\n  //           <label className=\"block text-sm font-medium text-gray-600\">\n  //             Password\n  //           </label>\n  //           <input\n  //             type=\"password\"\n  //             value={password}\n  //             onChange={(e) => setPassword(e.target.value)}\n  //             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n  //             required\n  //           />\n  //         </div>\n  //         <div className=\"mb-3\">\n  //           <label className=\"block text-sm font-medium text-gray-600\">\n  //             Confirm Password\n  //           </label>\n  //           <input\n  //             type=\"password\"\n  //             value={confirmPassword}\n  //             onChange={(e) => setConfirmPassword(e.target.value)}\n  //             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n  //             required\n  //           />\n  //         </div>\n  //         <button\n  //           type=\"submit\"\n  //           className=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\"\n  //         >\n  //           Sign Up\n  //         </button>\n  //       </form>\n  //       <p className=\"mt-4\">\n  //         Already have an account?{\" \"}\n  //         <button\n  //           onClick={onToggleForm}\n  //           className=\"text-green-500 hover:underline focus:outline-none\"\n  //         >\n  //           Log In\n  //         </button>\n  //       </p>\n  //     </div>\n  //   );\n  // };\n};\n_s(Signup, \"93ZTSVCjIArr5nY1jejRRwwv4Tw=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","Signup","onToggleForm","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSignup","e","preventDefault","console","log","response","post","user","password_confirmation","status","error","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog/client/src/components/register/signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Signup = ({ onToggleForm }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      console.log(\"Passwords do not match.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/auth\", {\n        user: {\n          // Wrap the parameters in a 'user' object\n          name,\n          email,\n          password,\n          password_confirmation: confirmPassword,\n          // Other necessary fields like nickname and image\n        },\n      });\n\n      if (response.status === 200) {\n        // Signup successful, you can handle redirection or other actions here\n        console.log(\"Signup successful\");\n      } else {\n        // Handle signup error\n        console.log(\"Signup failed\");\n      }\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n    }\n  };\n\n//   return (\n//     <div className=\"auth-form bg-white p-6 rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4 text-green-600\">Sign Up</h2>\n//       <form onSubmit={handleSignup}>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">\n//             Name\n//           </label>\n//           <input\n//             type=\"text\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">\n//             Email\n//           </label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">\n//             Password\n//           </label>\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <div className=\"mb-3\">\n//           <label className=\"block text-sm font-medium text-gray-600\">\n//             Confirm Password\n//           </label>\n//           <input\n//             type=\"password\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//             className=\"mt-1 p-2 border rounded border-solid border-green-400 w-full focus:border-green-400 focus:outline-none\"\n//             required\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded transition duration-300 shadow-md\"\n//         >\n//           Sign Up\n//         </button>\n//       </form>\n//       <p className=\"mt-4\">\n//         Already have an account?{\" \"}\n//         <button\n//           onClick={onToggleForm}\n//           className=\"text-green-500 hover:underline focus:outline-none\"\n//         >\n//           Log In\n//         </button>\n//       </p>\n//     </div>\n//   );\n// };\n\n};\n\nexport default Signup;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIN,QAAQ,KAAKE,eAAe,EAAE;MAChCK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,4BAA4B,EAAE;QAC9DC,IAAI,EAAE;UACJ;UACAf,IAAI;UACJE,KAAK;UACLE,QAAQ;UACRY,qBAAqB,EAAEV;UACvB;QACF;MACF,CAAC,CAAC;;MAEF,IAAIO,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM;QACL;QACAD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEA,CAAC;AAACnB,EAAA,CA9GIF,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAgHZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}