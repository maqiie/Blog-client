{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport \"./Blogs.css\";\nconst Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const authToken = localStorage.getItem(\"authToken\");\n  const apiBaseUrl = \"http://localhost:3001\";\n  const [currentUserId, setCurrentUserId] = useState(null);\n\n  // State to store comments for each post\n  const [comments, setComments] = useState({});\n\n  // State for the new comment input\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    // Fetch blog posts with their like and dislike counts\n    axios.get(`${apiBaseUrl}/posts`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      setPosts(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = async postId => {\n    try {\n      // Send a POST request to like the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Post liked successfully\");\n\n      // Fetch the updated like count\n      const likeResponse = await axios.get(`${apiBaseUrl}/posts/${postId}/likes`);\n      const updatedLikeCount = likeResponse.data.likesCount;\n      console.log(\"Updated Like Count:\", updatedLikeCount);\n\n      // Update the UI to reflect the new like count\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        likes_count: updatedLikeCount\n      } : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislikePost = async postId => {\n    try {\n      // Send a POST request to dislike the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Post disliked successfully\");\n\n      // Fetch the updated dislike count\n      const dislikeResponse = await axios.get(`${apiBaseUrl}/posts/${postId}/dislikes`);\n      const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n      console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n      // Update the UI to reflect the new dislike count\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        dislikes_count: updatedDislikeCount\n      } : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handlePostClick = postId => {\n    // Toggle the expanded state of the post\n    if (postId === expandedPostId) {\n      // Collapse the post if it's already expanded\n      setExpandedPostId(null);\n    } else {\n      // Expand the clicked post\n      setExpandedPostId(postId);\n\n      // Fetch comments for the expanded post\n      fetchComments(postId);\n    }\n  };\n  const fetchComments = async postId => {\n    try {\n      const response = await axios.get(`${apiBaseUrl}/posts/${postId}/comments`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\"\n        }\n      });\n\n      // Set the comments for the specific post\n      setComments({\n        ...comments,\n        [postId]: response.data\n      });\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const handleCommentSubmit = async postId => {\n    try {\n      // Send a POST request to add a new comment\n      const response = await axios.post(`${apiBaseUrl}/posts/${postId}/comments`, {\n        comment: {\n          content: newComment\n        }\n      }, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Clear the input field after successful submission\n      setNewComment(\"\");\n\n      // After adding a new comment, update the comments state with the new comment\n      const newCommentData = response.data; // Assuming the response contains the new comment data\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData]\n      }));\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    try {\n      // Send a DELETE request to remove the comment\n      await axios.delete(`${apiBaseUrl}/posts/${postId}/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(\"Comment deleted successfully\");\n\n      // Update the UI to remove the deleted comment\n      setComments(prevComments => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter(comment => comment.id !== commentId)\n      }));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n\n  // return (\n  //   <div className=\"blog\">\n  //     <h2 className=\"h2\">Latest Blog Posts</h2>\n  //     <div className=\"post-list\">\n  //       {posts.map((post, index) => (\n  //         <div\n  //           key={index}\n  //           className={`post ${post.id === expandedPostId ? \"expanded\" : \"\"}`}\n  //         >\n  //           <h3 className=\"post-title\">{post.title}</h3>\n  //           <p className=\"post-author\">By {post.author}</p>\n  //           <div className=\"post-content\">\n  //             {post.id === expandedPostId\n  //               ? post.content\n  //               : post.content.slice(0, 200) + \"...\"}\n  //           </div>\n  //           {post.image_url && (\n  //             <img\n  //               src={`${apiBaseUrl}${post.image_url}`}\n  //               alt={post.title}\n  //               className=\"post-image\"\n  //               onLoad={() => console.log(\"Image loaded successfully\")}\n  //               onError={() => console.error(\"Image loading error\")}\n  //             />\n  //           )}\n  //           <div>\n  //             <button onClick={() => handleLikePost(post.id)}>\n  //               <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n  //               <span>{post.likes_count}</span>\n  //             </button>\n  //             <button onClick={() => handleDislikePost(post.id)}>\n  //               <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n  //               <span>{post.dislikes_count}</span>\n  //             </button>\n  //           </div>\n  //           <div className=\"read-more\" onClick={() => handlePostClick(post.id)}>\n  //             {post.id === expandedPostId ? \"Read Less\" : \"Read More\"}\n  //           </div>\n  //           {post.id === expandedPostId && (\n  //             <div className=\"comments-section\">\n  //               <h4>Comments:</h4>\n  //               {/* <ul>\n  //                 {comments[post.id] &&\n  //                   comments[post.id].map((comment, commentIndex) => (\n  //                     <li key={commentIndex}>{comment.content}</li>\n\n  //                   ))}\n  //               </ul> */}\n  //               {/* <ul>\n  //                 {comments[post.id] &&\n  //                   comments[post.id].map((comment, commentIndex) => (\n  //                     <li key={commentIndex}>\n  //                       {comment.content}\n  //                       {comment.userId === currentUserId && (\n  //                         <div className=\"comment-actions\">\n  //                           <button\n  //                             class=\"bin\"\n  //                             onClick={() =>\n  //                               handleDeleteComment(post.id, comment.id)\n  //                             }\n  //                           >\n  //                             ðŸ—‘\n  //                           </button>\n  //                           <div class=\"div\">\n  //                             <small>\n  //                               <i></i>\n  //                             </small>\n  //                           </div>\n  //                         </div>\n  //                       )}\n  //                     </li>\n  //                   ))}\n  //               </ul> */}\n  //               <ul>\n  //                 {comments[post.id] &&\n  //                   comments[post.id].map((comment, commentIndex) => (\n  //                     <li key={commentIndex}>\n  //                       {comment.content}\n  //                       {console.log(\n  //                         \"Checking condition: \",\n  //                         comment.userId,\n  //                         currentUserId\n  //                       )}\n  //                       {comment.userId === currentUserId && (\n  //                         <div className=\"comment-actions\">\n  //                           {console.log(\n  //                             \"Delete button should be displayed here\"\n  //                           )}\n  //                           <button\n  //                             className=\"bin\"\n  //                             onClick={() =>\n  //                               handleDeleteComment(post.id, comment.id)\n  //                             }\n  //                           >\n  //                             ðŸ—‘\n  //                           </button>\n  //                           <div className=\"div\">\n  //                             <small>\n  //                               <i></i>\n  //                             </small>\n  //                           </div>\n  //                         </div>\n  //                       )}\n  //                     </li>\n  //                   ))}\n  //               </ul>\n\n  //               <div>\n  //                 <input\n  //                   type=\"text\"\n  //                   placeholder=\"Add a comment...\"\n  //                   value={newComment}\n  //                   onChange={(e) => setNewComment(e.target.value)}\n  //                 />\n  //                 <button\n  //                   className=\"bookmarkBtn\"\n  //                   onClick={() => handleCommentSubmit(post.id)}\n  //                 >\n  //                   <span className=\"IconContainer2\">\n  //                     <svg fill=\"white\" viewBox=\"0 0 512 512\" height=\"1em\">\n  //                       <path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c-4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"></path>\n  //                     </svg>\n  //                   </span>\n  //                   <p className=\"text\">Comment</p>\n  //                 </button>\n  //               </div>\n  //             </div>\n  //           )}\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n};\n_s(Blog, \"X9DwKBWClNWbzoiDwx+E+T441iA=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useState","useEffect","axios","Blog","_s","posts","setPosts","expandedPostId","setExpandedPostId","authToken","localStorage","getItem","apiBaseUrl","currentUserId","setCurrentUserId","comments","setComments","newComment","setNewComment","get","headers","Authorization","Accept","then","response","data","catch","error","console","handleLikePost","postId","post","log","likeResponse","updatedLikeCount","likesCount","prevPosts","map","id","likes_count","handleDislikePost","dislikeResponse","updatedDislikeCount","dislikesCount","dislikes_count","handlePostClick","fetchComments","handleCommentSubmit","comment","content","newCommentData","prevComments","handleDeleteComment","commentId","delete","filter","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog-client/src/components/Blogs/Blogs.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport \"./Blogs.css\";\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const authToken = localStorage.getItem(\"authToken\");\n  const apiBaseUrl = \"http://localhost:3001\";\n  const [currentUserId, setCurrentUserId] = useState(null);\n  \n\n  // State to store comments for each post\n  const [comments, setComments] = useState({});\n\n  // State for the new comment input\n  const [newComment, setNewComment] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch blog posts with their like and dislike counts\n    axios\n      .get(`${apiBaseUrl}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          Accept: \"application/json\",\n        },\n      })\n      .then((response) => {\n        setPosts(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching posts:\", error);\n      });\n  }, [authToken, apiBaseUrl]);\n  const handleLikePost = async (postId) => {\n    try {\n      // Send a POST request to like the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/like`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n\n      console.log(\"Post liked successfully\");\n\n      // Fetch the updated like count\n      const likeResponse = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/likes`\n      );\n\n      const updatedLikeCount = likeResponse.data.likesCount;\n\n      console.log(\"Updated Like Count:\", updatedLikeCount);\n\n      // Update the UI to reflect the new like count\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId\n            ? {\n                ...post,\n                likes_count: updatedLikeCount,\n              }\n            : post\n        )\n      );\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n\n  const handleDislikePost = async (postId) => {\n    try {\n      // Send a POST request to dislike the post\n      await axios.post(`${apiBaseUrl}/posts/${postId}/dislike`, null, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      });\n\n      console.log(\"Post disliked successfully\");\n\n      // Fetch the updated dislike count\n      const dislikeResponse = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/dislikes`\n      );\n\n      const updatedDislikeCount = dislikeResponse.data.dislikesCount;\n\n      console.log(\"Updated Dislike Count:\", updatedDislikeCount);\n\n      // Update the UI to reflect the new dislike count\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId\n            ? {\n                ...post,\n                dislikes_count: updatedDislikeCount,\n              }\n            : post\n        )\n      );\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n\n  const handlePostClick = (postId) => {\n    // Toggle the expanded state of the post\n    if (postId === expandedPostId) {\n      // Collapse the post if it's already expanded\n      setExpandedPostId(null);\n    } else {\n      // Expand the clicked post\n      setExpandedPostId(postId);\n\n      // Fetch comments for the expanded post\n      fetchComments(postId);\n    }\n  };\n\n  const fetchComments = async (postId) => {\n    try {\n      const response = await axios.get(\n        `${apiBaseUrl}/posts/${postId}/comments`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            Accept: \"application/json\",\n          },\n        }\n      );\n\n      // Set the comments for the specific post\n      setComments({ ...comments, [postId]: response.data });\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n\n  const handleCommentSubmit = async (postId) => {\n    try {\n      // Send a POST request to add a new comment\n      const response = await axios.post(\n        `${apiBaseUrl}/posts/${postId}/comments`,\n        { comment: { content: newComment } },\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      // Clear the input field after successful submission\n      setNewComment(\"\");\n\n      // After adding a new comment, update the comments state with the new comment\n      const newCommentData = response.data; // Assuming the response contains the new comment data\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: [...(prevComments[postId] || []), newCommentData],\n      }));\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    try {\n      // Send a DELETE request to remove the comment\n      await axios.delete(\n        `${apiBaseUrl}/posts/${postId}/comments/${commentId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n\n      console.log(\"Comment deleted successfully\");\n\n      // Update the UI to remove the deleted comment\n      setComments((prevComments) => ({\n        ...prevComments,\n        [postId]: prevComments[postId].filter(\n          (comment) => comment.id !== commentId\n        ),\n      }));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n\n  // return (\n  //   <div className=\"blog\">\n  //     <h2 className=\"h2\">Latest Blog Posts</h2>\n  //     <div className=\"post-list\">\n  //       {posts.map((post, index) => (\n  //         <div\n  //           key={index}\n  //           className={`post ${post.id === expandedPostId ? \"expanded\" : \"\"}`}\n  //         >\n  //           <h3 className=\"post-title\">{post.title}</h3>\n  //           <p className=\"post-author\">By {post.author}</p>\n  //           <div className=\"post-content\">\n  //             {post.id === expandedPostId\n  //               ? post.content\n  //               : post.content.slice(0, 200) + \"...\"}\n  //           </div>\n  //           {post.image_url && (\n  //             <img\n  //               src={`${apiBaseUrl}${post.image_url}`}\n  //               alt={post.title}\n  //               className=\"post-image\"\n  //               onLoad={() => console.log(\"Image loaded successfully\")}\n  //               onError={() => console.error(\"Image loading error\")}\n  //             />\n  //           )}\n  //           <div>\n  //             <button onClick={() => handleLikePost(post.id)}>\n  //               <i className=\"fa fa-thumbs-up thumbs-up-icon\"></i>{\" \"}\n  //               <span>{post.likes_count}</span>\n  //             </button>\n  //             <button onClick={() => handleDislikePost(post.id)}>\n  //               <i className=\"fa fa-thumbs-down thumbs-down-icon\"></i>{\" \"}\n  //               <span>{post.dislikes_count}</span>\n  //             </button>\n  //           </div>\n  //           <div className=\"read-more\" onClick={() => handlePostClick(post.id)}>\n  //             {post.id === expandedPostId ? \"Read Less\" : \"Read More\"}\n  //           </div>\n  //           {post.id === expandedPostId && (\n  //             <div className=\"comments-section\">\n  //               <h4>Comments:</h4>\n  //               {/* <ul>\n  //                 {comments[post.id] &&\n  //                   comments[post.id].map((comment, commentIndex) => (\n  //                     <li key={commentIndex}>{comment.content}</li>\n                      \n  //                   ))}\n  //               </ul> */}\n  //               {/* <ul>\n  //                 {comments[post.id] &&\n  //                   comments[post.id].map((comment, commentIndex) => (\n  //                     <li key={commentIndex}>\n  //                       {comment.content}\n  //                       {comment.userId === currentUserId && (\n  //                         <div className=\"comment-actions\">\n  //                           <button\n  //                             class=\"bin\"\n  //                             onClick={() =>\n  //                               handleDeleteComment(post.id, comment.id)\n  //                             }\n  //                           >\n  //                             ðŸ—‘\n  //                           </button>\n  //                           <div class=\"div\">\n  //                             <small>\n  //                               <i></i>\n  //                             </small>\n  //                           </div>\n  //                         </div>\n  //                       )}\n  //                     </li>\n  //                   ))}\n  //               </ul> */}\n  //               <ul>\n  //                 {comments[post.id] &&\n  //                   comments[post.id].map((comment, commentIndex) => (\n  //                     <li key={commentIndex}>\n  //                       {comment.content}\n  //                       {console.log(\n  //                         \"Checking condition: \",\n  //                         comment.userId,\n  //                         currentUserId\n  //                       )}\n  //                       {comment.userId === currentUserId && (\n  //                         <div className=\"comment-actions\">\n  //                           {console.log(\n  //                             \"Delete button should be displayed here\"\n  //                           )}\n  //                           <button\n  //                             className=\"bin\"\n  //                             onClick={() =>\n  //                               handleDeleteComment(post.id, comment.id)\n  //                             }\n  //                           >\n  //                             ðŸ—‘\n  //                           </button>\n  //                           <div className=\"div\">\n  //                             <small>\n  //                               <i></i>\n  //                             </small>\n  //                           </div>\n  //                         </div>\n  //                       )}\n  //                     </li>\n  //                   ))}\n  //               </ul>\n\n  //               <div>\n  //                 <input\n  //                   type=\"text\"\n  //                   placeholder=\"Add a comment...\"\n  //                   value={newComment}\n  //                   onChange={(e) => setNewComment(e.target.value)}\n  //                 />\n  //                 <button\n  //                   className=\"bookmarkBtn\"\n  //                   onClick={() => handleCommentSubmit(post.id)}\n  //                 >\n  //                   <span className=\"IconContainer2\">\n  //                     <svg fill=\"white\" viewBox=\"0 0 512 512\" height=\"1em\">\n  //                       <path d=\"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c-4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"></path>\n  //                     </svg>\n  //                   </span>\n  //                   <p className=\"text\">Comment</p>\n  //                 </button>\n  //               </div>\n  //             </div>\n  //           )}\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // );\n};\n\nexport default Blog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}