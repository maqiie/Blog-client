{"ast":null,"code":"var _jsxFileName = \"/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n//   }, []);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem('authToken');\n//     console.log('Auth Token:', authToken); // Add this line to log the authToken\n\n//     const headers = {\n//       'Authorization': `Bearer ${authToken}`,\n//       'Content-Type': 'multipart/form-data', // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Content\"\n//           value={content}\n//           onChange={(e) => setContent(e.target.value)}\n//           required\n//         />\n//         <select\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           {categories.map((category) => (\n//             <option key={category.id} value={category.id}>\n//               {category.name}\n//             </option>\n//           ))}\n//         </select>\n//         <Dropzone onDrop={handleImageDrop}>\n//           {({ getRootProps, getInputProps }) => (\n//             <div className=\"dropzone\" {...getRootProps()}>\n//               <input {...getInputProps()} />\n//               <p>Drag & drop images or click here to select files</p>\n//             </div>\n//           )}\n//         </Dropzone>\n//         <br />\n//         <button class=\"fancy\" href=\"#\">\n//           <span class=\"top-key\"></span>\n//           <span class=\"text\">Create Post</span>\n//           <span class=\"bottom-key-1\"></span>\n//           <span class=\"bottom-key-2\"></span>\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreatePost;\n// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n//   const [userPosts, setUserPosts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n\n//     // Fetch the logged-in user's posts from the backend\n//     if (currentUser) {\n//       const authToken = localStorage.getItem(\"authToken\");\n//       const userId = currentUser.id; // Check if currentUser is defined\n\n//       axios\n//         .get(`http://localhost:3001/users/${userId}/posts`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         })\n//         .then((response) => {\n//           setUserPosts(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching user posts:\", error);\n//         });\n//     }\n//   }, [currentUser]);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem(\"authToken\");\n//     console.log(\"Auth Token:\", authToken);\n\n//     const headers = {\n//       Authorization: `Bearer ${authToken}`,\n//       \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n/*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: handleSubmit,\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    placeholder: \"Content\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    required: true,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      children: \"Select a category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: category.id,\n      children: category.name\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n    onDrop: handleImageDrop,\n    children: ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag & drop images or click here to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"fancy\",\n    href: \"#\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"top-key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bottom-key-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bottom-key-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 210,\n  columnNumber: 7\n}, this);\n//     </div>\n//   );\n//   <div className=\"posts\">\n//     <h3>Your Posts</h3>\n//     {userPosts.length === 0 ? (\n//       <p>No blogs, start your blogging journey</p>\n//     ) : (\n//       <div className=\"blog-cards-container\">\n//       <ul>\n//         {userPosts.map((post) => (\n//           <li key={post.id}>\n//             <h4>{post.title}</h4>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   )}\n// </div>\n\n// };\n\n// export default CreatePost;\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  currentUser\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [showCreatePost, setShowCreatePost] = useState(true);\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios.get(\"http://localhost:3001/categories\").then(response => {\n      setCategories(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n    });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios.get(`http://localhost:3001/users/${userId}/posts`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(response => {\n        setUserPosts(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n      });\n    }\n  }, [currentUser]);\n  const handleImageDrop = acceptedFiles => {\n    setImages(acceptedFiles);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n\n    // Ensure the category ID is an integer\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n    images.forEach(image => formData.append(\"post[images][]\", image));\n\n    // Retrieve the user's authentication token from local storage\n    const authToken = localStorage.getItem(\"authToken\");\n    console.log(\"Auth Token:\", authToken);\n    const headers = {\n      Authorization: `Bearer ${authToken}`,\n      \"Content-Type\": \"multipart/form-data\" // Set the content type for file uploads\n    };\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/posts\", formData, {\n        headers\n      });\n      console.log(\"Post created:\", response.data);\n      // Reset form fields\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  const toggleCreatePost = () => {\n    setShowCreatePost(!showCreatePost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showCreatePost && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), userPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No blogs, start your blogging journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-cards-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCreatePost,\n      children: showCreatePost ? \"Hide Create Post\" : \"Show Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"vJgREg7lXkID1ID0KjCUx8UnOBk=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["_jsxDEV","onSubmit","handleSubmit","children","type","placeholder","value","title","onChange","e","setTitle","target","required","fileName","_jsxFileName","lineNumber","columnNumber","content","setContent","category","setCategory","disabled","categories","map","id","name","Dropzone","onDrop","handleImageDrop","getRootProps","getInputProps","className","href","React","useState","useEffect","axios","jsxDEV","CreatePost","currentUser","_s","setCategories","images","setImages","userPosts","setUserPosts","showCreatePost","setShowCreatePost","get","then","response","data","catch","error","console","authToken","localStorage","getItem","userId","headers","Authorization","acceptedFiles","event","preventDefault","formData","FormData","append","categoryId","parseInt","forEach","image","log","post","toggleCreatePost","length","onClick","_c","$RefreshReg$"],"sources":["/home/markpaul/projects/Blog-client/src/components/createpost/createpost.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n//   }, []);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem('authToken');\n//     console.log('Auth Token:', authToken); // Add this line to log the authToken\n\n//     const headers = {\n//       'Authorization': `Bearer ${authToken}`,\n//       'Content-Type': 'multipart/form-data', // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//         />\n//         <textarea\n//           placeholder=\"Content\"\n//           value={content}\n//           onChange={(e) => setContent(e.target.value)}\n//           required\n//         />\n//         <select\n//           value={category}\n//           onChange={(e) => setCategory(e.target.value)}\n//           required\n//         >\n//           <option value=\"\" disabled>\n//             Select a category\n//           </option>\n//           {categories.map((category) => (\n//             <option key={category.id} value={category.id}>\n//               {category.name}\n//             </option>\n//           ))}\n//         </select>\n//         <Dropzone onDrop={handleImageDrop}>\n//           {({ getRootProps, getInputProps }) => (\n//             <div className=\"dropzone\" {...getRootProps()}>\n//               <input {...getInputProps()} />\n//               <p>Drag & drop images or click here to select files</p>\n//             </div>\n//           )}\n//         </Dropzone>\n//         <br />\n//         <button class=\"fancy\" href=\"#\">\n//           <span class=\"top-key\"></span>\n//           <span class=\"text\">Create Post</span>\n//           <span class=\"bottom-key-1\"></span>\n//           <span class=\"bottom-key-2\"></span>\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreatePost;\n// import React, { useState, useEffect } from \"react\";\n// import Dropzone from \"react-dropzone\";\n// import axios from \"axios\";\n// import \"./createpost.css\";\n\n// const CreatePost = ({ currentUser }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [categories, setCategories] = useState([]);\n//   const [images, setImages] = useState([]);\n//   const [userPosts, setUserPosts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch categories from the backend and set them to the state\n//     axios\n//       .get(\"http://localhost:3001/categories\")\n//       .then((response) => {\n//         setCategories(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching categories:\", error);\n//       });\n\n//     // Fetch the logged-in user's posts from the backend\n//     if (currentUser) {\n//       const authToken = localStorage.getItem(\"authToken\");\n//       const userId = currentUser.id; // Check if currentUser is defined\n\n//       axios\n//         .get(`http://localhost:3001/users/${userId}/posts`, {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         })\n//         .then((response) => {\n//           setUserPosts(response.data);\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching user posts:\", error);\n//         });\n//     }\n//   }, [currentUser]);\n\n//   const handleImageDrop = (acceptedFiles) => {\n//     setImages(acceptedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append(\"post[title]\", title);\n//     formData.append(\"post[content]\", content);\n\n//     // Ensure the category ID is an integer\n//     const categoryId = parseInt(category, 10);\n//     formData.append(\"post[category_id]\", categoryId);\n\n//     images.forEach((image) => formData.append(\"post[images][]\", image));\n\n//     // Retrieve the user's authentication token from local storage\n//     const authToken = localStorage.getItem(\"authToken\");\n//     console.log(\"Auth Token:\", authToken);\n\n//     const headers = {\n//       Authorization: `Bearer ${authToken}`,\n//       \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n//     };\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/posts\",\n//         formData,\n//         { headers }\n//       );\n//       console.log(\"Post created:\", response.data);\n//       // Reset form fields\n//       setTitle(\"\");\n//       setContent(\"\");\n//       setCategory(\"\");\n//       setImages([]);\n//     } catch (error) {\n//       console.error(\"Error creating post:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-post\">\n//       <h2>Create a New Post</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          required\n        />\n        <select\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n          required\n        >\n          <option value=\"\" disabled>\n            Select a category\n          </option>\n          {categories.map((category) => (\n            <option key={category.id} value={category.id}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n        <Dropzone onDrop={handleImageDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <div className=\"dropzone\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <p>Drag & drop images or click here to select files</p>\n            </div>\n          )}\n        </Dropzone>\n        <br />\n        <button className=\"fancy\" href=\"#\">\n          <span className=\"top-key\"></span>\n          <span className=\"text\">Create Post</span>\n          <span className=\"bottom-key-1\"></span>\n          <span className=\"bottom-key-2\"></span>\n        </button>\n      </form>\n//     </div>\n//   );\n//   <div className=\"posts\">\n//     <h3>Your Posts</h3>\n//     {userPosts.length === 0 ? (\n//       <p>No blogs, start your blogging journey</p>\n//     ) : (\n//       <div className=\"blog-cards-container\">\n//       <ul>\n//         {userPosts.map((post) => (\n//           <li key={post.id}>\n//             <h4>{post.title}</h4>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   )}\n// </div>\n\n// };\n\n// export default CreatePost;\nimport React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./createpost.css\";\n\nconst CreatePost = ({ currentUser }) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [showCreatePost, setShowCreatePost] = useState(true);\n\n  useEffect(() => {\n    // Fetch categories from the backend and set them to the state\n    axios\n      .get(\"http://localhost:3001/categories\")\n      .then((response) => {\n        setCategories(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching categories:\", error);\n      });\n\n    // Fetch the logged-in user's posts from the backend\n    if (currentUser) {\n      const authToken = localStorage.getItem(\"authToken\");\n      const userId = currentUser.id; // Check if currentUser is defined\n\n      axios\n        .get(`http://localhost:3001/users/${userId}/posts`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        })\n        .then((response) => {\n          setUserPosts(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching user posts:\", error);\n        });\n    }\n  }, [currentUser]);\n\n  const handleImageDrop = (acceptedFiles) => {\n    setImages(acceptedFiles);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"post[title]\", title);\n    formData.append(\"post[content]\", content);\n\n    // Ensure the category ID is an integer\n    const categoryId = parseInt(category, 10);\n    formData.append(\"post[category_id]\", categoryId);\n\n    images.forEach((image) => formData.append(\"post[images][]\", image));\n\n    // Retrieve the user's authentication token from local storage\n    const authToken = localStorage.getItem(\"authToken\");\n    console.log(\"Auth Token:\", authToken);\n\n    const headers = {\n      Authorization: `Bearer ${authToken}`,\n      \"Content-Type\": \"multipart/form-data\", // Set the content type for file uploads\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/posts\",\n        formData,\n        { headers }\n      );\n      console.log(\"Post created:\", response.data);\n      // Reset form fields\n      setTitle(\"\");\n      setContent(\"\");\n      setCategory(\"\");\n      setImages([]);\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  const toggleCreatePost = () => {\n    setShowCreatePost(!showCreatePost);\n  };\n\n  return (\n    <div>\n      {showCreatePost && (\n        <div className=\"create-post\">\n          <h2>Create a New Post</h2>\n          <form onSubmit={handleSubmit}>\n            {/* ... (your form inputs) */}\n          </form>\n        </div>\n      )}\n\n      <div className=\"posts\">\n        <h3>Your Posts</h3>\n        {userPosts.length === 0 ? (\n          <p>No blogs, start your blogging journey</p>\n        ) : (\n          <div className=\"blog-cards-container\">\n            <ul>\n              {userPosts.map((post) => (\n                <li key={post.id}>\n                  <h4>{post.title}</h4>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      <button onClick={toggleCreatePost}>\n        {showCreatePost ? \"Hide Create Post\" : \"Show Create Post\"}\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePost;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACM,aAAAA,OAAA;EAAMC,QAAQ,EAAEC,YAAa;EAAAC,QAAA,gBAC3BH,OAAA;IACEI,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,OAAO;IACnBC,KAAK,EAAEC,KAAM;IACbC,QAAQ,EAAGC,CAAC,IAAKC,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;IAC1CM,QAAQ;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}